

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Firm : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass>
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Firm()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Firm(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Firm> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Firm.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firm_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firm_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ID
        {
            get
            {
                return global::LightSwitchApplication.Firm.DetailsClass.GetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.ID);
            }
            set
            {
                global::LightSwitchApplication.Firm.DetailsClass.SetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FirmCode
        {
            get
            {
                return global::LightSwitchApplication.Firm.DetailsClass.GetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmCode);
            }
            set
            {
                global::LightSwitchApplication.Firm.DetailsClass.SetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string FirmName
        {
            get
            {
                return global::LightSwitchApplication.Firm.DetailsClass.GetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmName);
            }
            set
            {
                global::LightSwitchApplication.Firm.DetailsClass.SetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int FirmType
        {
            get
            {
                return global::LightSwitchApplication.Firm.DetailsClass.GetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmType);
            }
            set
            {
                global::LightSwitchApplication.Firm.DetailsClass.SetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void FirmType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool External
        {
            get
            {
                return global::LightSwitchApplication.Firm.DetailsClass.GetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.External);
            }
            set
            {
                global::LightSwitchApplication.Firm.DetailsClass.SetValue(this, global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.External, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void External_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void External_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void External_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Firm,
                global::LightSwitchApplication.Firm.DetailsClass,
                global::LightSwitchApplication.Firm.DetailsClass.IImplementation,
                global::LightSwitchApplication.Firm.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass>.Entry
                __FirmEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass>.Entry(
                    global::LightSwitchApplication.Firm.DetailsClass.__Firm_CreateNew,
                    global::LightSwitchApplication.Firm.DetailsClass.__Firm_Created,
                    global::LightSwitchApplication.Firm.DetailsClass.__Firm_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Firm __Firm_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Firm> es)
            {
                return new global::LightSwitchApplication.Firm(es);
            }
            private static void __Firm_Created(global::LightSwitchApplication.Firm e)
            {
                e.Firm_Created();
            }
            private static bool __Firm_AllowSaveWithErrors(global::LightSwitchApplication.Firm e)
            {
                bool result = false;
                e.Firm_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Firm.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string> FirmCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string> FirmName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, int> FirmType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.FirmType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, bool> External
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties.External) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, bool>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string ID { get; set; }
                new string FirmCode { get; set; }
                new string FirmName { get; set; }
                new int FirmType { get; set; }
                new bool External { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Entry(
                        "ID",
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._ID_SetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Firm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Data> c, global::LightSwitchApplication.Firm.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Firm e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Firm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static string _ID_GetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_SetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ID = v;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Firm e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Entry
                    FirmCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Entry(
                        "FirmCode",
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmCode_Stub,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmCode_Validate,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmCode_GetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmCode_SetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmCode_OnValueChanged);
                private static void _FirmCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Firm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Data> c, global::LightSwitchApplication.Firm.DetailsClass d, object sf)
                {
                    c(d, ref d._FirmCode, sf);
                }
                private static bool _FirmCode_ComputeIsReadOnly(global::LightSwitchApplication.Firm e)
                {
                    bool result = false;
                    e.FirmCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _FirmCode_Validate(global::LightSwitchApplication.Firm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FirmCode_Validate(r);
                }
                private static string _FirmCode_GetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d)
                {
                    return d.ImplementationEntity.FirmCode;
                }
                private static void _FirmCode_SetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FirmCode = v;
                }
                private static void _FirmCode_OnValueChanged(global::LightSwitchApplication.Firm e)
                {
                    e.FirmCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Entry
                    FirmName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Entry(
                        "FirmName",
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmName_Stub,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmName_Validate,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmName_GetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmName_SetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmName_OnValueChanged);
                private static void _FirmName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Firm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Data> c, global::LightSwitchApplication.Firm.DetailsClass d, object sf)
                {
                    c(d, ref d._FirmName, sf);
                }
                private static bool _FirmName_ComputeIsReadOnly(global::LightSwitchApplication.Firm e)
                {
                    bool result = false;
                    e.FirmName_IsReadOnly(ref result);
                    return result;
                }
                private static void _FirmName_Validate(global::LightSwitchApplication.Firm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FirmName_Validate(r);
                }
                private static string _FirmName_GetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d)
                {
                    return d.ImplementationEntity.FirmName;
                }
                private static void _FirmName_SetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d, string v)
                {
                    d.ImplementationEntity.FirmName = v;
                }
                private static void _FirmName_OnValueChanged(global::LightSwitchApplication.Firm e)
                {
                    e.FirmName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, int>.Entry
                    FirmType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, int>.Entry(
                        "FirmType",
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmType_Stub,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmType_Validate,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmType_GetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmType_SetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._FirmType_OnValueChanged);
                private static void _FirmType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Firm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, int>.Data> c, global::LightSwitchApplication.Firm.DetailsClass d, object sf)
                {
                    c(d, ref d._FirmType, sf);
                }
                private static bool _FirmType_ComputeIsReadOnly(global::LightSwitchApplication.Firm e)
                {
                    bool result = false;
                    e.FirmType_IsReadOnly(ref result);
                    return result;
                }
                private static void _FirmType_Validate(global::LightSwitchApplication.Firm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.FirmType_Validate(r);
                }
                private static int _FirmType_GetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d)
                {
                    return d.ImplementationEntity.FirmType;
                }
                private static void _FirmType_SetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d, int v)
                {
                    d.ImplementationEntity.FirmType = v;
                }
                private static void _FirmType_OnValueChanged(global::LightSwitchApplication.Firm e)
                {
                    e.FirmType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, bool>.Entry
                    External = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, bool>.Entry(
                        "External",
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._External_Stub,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._External_ComputeIsReadOnly,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._External_Validate,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._External_GetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._External_SetImplementationValue,
                        global::LightSwitchApplication.Firm.DetailsClass.PropertySetProperties._External_OnValueChanged);
                private static void _External_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Firm.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Firm.DetailsClass d, object sf)
                {
                    c(d, ref d._External, sf);
                }
                private static bool _External_ComputeIsReadOnly(global::LightSwitchApplication.Firm e)
                {
                    bool result = false;
                    e.External_IsReadOnly(ref result);
                    return result;
                }
                private static void _External_Validate(global::LightSwitchApplication.Firm e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.External_Validate(r);
                }
                private static bool _External_GetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d)
                {
                    return d.ImplementationEntity.External;
                }
                private static void _External_SetImplementationValue(global::LightSwitchApplication.Firm.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.External = v;
                }
                private static void _External_OnValueChanged(global::LightSwitchApplication.Firm e)
                {
                    e.External_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Data _FirmCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, string>.Data _FirmName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, int>.Data _FirmType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Firm, global::LightSwitchApplication.Firm.DetailsClass, bool>.Data _External;
            
        }
    
        #endregion
    }
    
    #endregion
}

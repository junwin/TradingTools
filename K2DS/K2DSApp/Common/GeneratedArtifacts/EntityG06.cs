

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Order : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Order()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Order(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Order> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Order.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Order_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UserID
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.UserID);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.UserID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CorrelationID
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.CorrelationID);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.CorrelationID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrelationID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrelationID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CorrelationID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Account
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Account);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Account, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Account_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int AutoTradeProcessCount
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AutoTradeProcessCount);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AutoTradeProcessCount, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AutoTradeProcessCount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AutoTradeProcessCount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AutoTradeProcessCount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double AvgPx
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AvgPx);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AvgPx, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvgPx_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvgPx_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AvgPx_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ClOrdID
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ClOrdID);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ClOrdID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClOrdID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClOrdID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ClOrdID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double CumQty
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.CumQty);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.CumQty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CumQty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CumQty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CumQty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExtendedOrdType
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ExtendedOrdType);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ExtendedOrdType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedOrdType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedOrdType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExtendedOrdType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string HandlInst
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.HandlInst);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.HandlInst, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HandlInst_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HandlInst_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void HandlInst_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Identity
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Identity);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Identity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Identity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Identity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Identity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool IsAutoTrade
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsAutoTrade);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsAutoTrade, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAutoTrade_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAutoTrade_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IsAutoTrade_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double LastPx
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LastPx);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LastPx, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastPx_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastPx_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastPx_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double LastQty
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LastQty);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LastQty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastQty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastQty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LastQty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double LeavesQty
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LeavesQty);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LeavesQty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LeavesQty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LeavesQty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LeavesQty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LocateReqd
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LocateReqd);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LocateReqd, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocateReqd_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocateReqd_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocateReqd_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LocationID
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LocationID);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LocationID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LocationID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long MaxFloor
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.MaxFloor);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.MaxFloor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxFloor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxFloor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MaxFloor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Mnemonic
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Mnemonic);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Mnemonic, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OCAGroupName
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OCAGroupName);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OCAGroupName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OCAGroupName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OCAGroupName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OCAGroupName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OrdStatus
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrdStatus);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrdStatus, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrdStatus_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrdStatus_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrdStatus_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OrdType
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrdType);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrdType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrdType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrdType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrdType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OrderID
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderID);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public long OrderQty
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderQty);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderQty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderQty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderQty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderQty_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string OrigClOrdID
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrigClOrdID);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrigClOrdID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrigClOrdID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrigClOrdID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrigClOrdID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ParentIdentity
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ParentIdentity);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ParentIdentity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentIdentity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentIdentity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ParentIdentity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double Price
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Price);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Price, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Price_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Price_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Price_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double QuantityLimit
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.QuantityLimit);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.QuantityLimit, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuantityLimit_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuantityLimit_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QuantityLimit_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ShortSaleLocate
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ShortSaleLocate);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ShortSaleLocate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortSaleLocate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortSaleLocate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ShortSaleLocate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Side
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Side);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Side, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Side_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Side_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Side_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double StopPx
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.StopPx);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.StopPx, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StopPx_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StopPx_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StopPx_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string StrategyName
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.StrategyName);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.StrategyName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StrategyName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StrategyName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StrategyName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Tag
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Tag);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Tag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Text
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Text);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Text, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Text_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Text_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Text_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TimeInForce
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TimeInForce);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TimeInForce, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeInForce_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeInForce_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TimeInForce_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TradeVenue
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TradeVenue);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TradeVenue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TradeVenue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TradeVenue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TradeVenue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TransactTime
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TransactTime);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TransactTime, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactTime_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactTime_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TransactTime_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TriggerOrderID
        {
            get
            {
                return global::LightSwitchApplication.Order.DetailsClass.GetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TriggerOrderID);
            }
            set
            {
                global::LightSwitchApplication.Order.DetailsClass.SetValue(this, global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TriggerOrderID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOrderID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOrderID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TriggerOrderID_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Order,
                global::LightSwitchApplication.Order.DetailsClass,
                global::LightSwitchApplication.Order.DetailsClass.IImplementation,
                global::LightSwitchApplication.Order.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.UserID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>.Entry
                __OrderEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>.Entry(
                    global::LightSwitchApplication.Order.DetailsClass.__Order_CreateNew,
                    global::LightSwitchApplication.Order.DetailsClass.__Order_Created,
                    global::LightSwitchApplication.Order.DetailsClass.__Order_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Order __Order_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Order> es)
            {
                return new global::LightSwitchApplication.Order(es);
            }
            private static void __Order_Created(global::LightSwitchApplication.Order e)
            {
                e.Order_Created();
            }
            private static bool __Order_AllowSaveWithErrors(global::LightSwitchApplication.Order e)
            {
                bool result = false;
                e.Order_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Order.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> UserID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.UserID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> CorrelationID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.CorrelationID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> Account
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Account) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int> AutoTradeProcessCount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AutoTradeProcessCount) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> AvgPx
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.AvgPx) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> ClOrdID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ClOrdID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> CumQty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.CumQty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> ExtendedOrdType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ExtendedOrdType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> HandlInst
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.HandlInst) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> Identity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Identity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool> IsAutoTrade
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.IsAutoTrade) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> LastPx
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LastPx) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> LastQty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LastQty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> LeavesQty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LeavesQty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> LocateReqd
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LocateReqd) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> LocationID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.LocationID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long> MaxFloor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.MaxFloor) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> Mnemonic
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Mnemonic) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> OCAGroupName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OCAGroupName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> OrdStatus
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrdStatus) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> OrdType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrdType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> OrderID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long> OrderQty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrderQty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> OrigClOrdID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.OrigClOrdID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> ParentIdentity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ParentIdentity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> Price
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Price) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> QuantityLimit
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.QuantityLimit) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> ShortSaleLocate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.ShortSaleLocate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> Side
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Side) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double> StopPx
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.StopPx) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> StrategyName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.StrategyName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> Tag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Tag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> Text
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.Text) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> TimeInForce
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TimeInForce) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> TradeVenue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TradeVenue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> TransactTime
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TransactTime) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string> TriggerOrderID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties.TriggerOrderID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string UserID { get; set; }
                new string CorrelationID { get; set; }
                new string Account { get; set; }
                new int AutoTradeProcessCount { get; set; }
                new double AvgPx { get; set; }
                new string ClOrdID { get; set; }
                new double CumQty { get; set; }
                new string ExtendedOrdType { get; set; }
                new string HandlInst { get; set; }
                new string Identity { get; set; }
                new bool IsAutoTrade { get; set; }
                new double LastPx { get; set; }
                new double LastQty { get; set; }
                new double LeavesQty { get; set; }
                new string LocateReqd { get; set; }
                new string LocationID { get; set; }
                new long MaxFloor { get; set; }
                new string Mnemonic { get; set; }
                new string OCAGroupName { get; set; }
                new string OrdStatus { get; set; }
                new string OrdType { get; set; }
                new string OrderID { get; set; }
                new long OrderQty { get; set; }
                new string OrigClOrdID { get; set; }
                new string ParentIdentity { get; set; }
                new double Price { get; set; }
                new double QuantityLimit { get; set; }
                new string ShortSaleLocate { get; set; }
                new string Side { get; set; }
                new double StopPx { get; set; }
                new string StrategyName { get; set; }
                new string Tag { get; set; }
                new string Text { get; set; }
                new string TimeInForce { get; set; }
                new string TradeVenue { get; set; }
                new string TransactTime { get; set; }
                new string TriggerOrderID { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    UserID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "UserID",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._UserID_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._UserID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._UserID_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._UserID_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._UserID_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._UserID_OnValueChanged);
                private static void _UserID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._UserID, sf);
                }
                private static bool _UserID_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.UserID_IsReadOnly(ref result);
                    return result;
                }
                private static void _UserID_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UserID_Validate(r);
                }
                private static string _UserID_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.UserID;
                }
                private static void _UserID_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UserID = v;
                }
                private static void _UserID_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.UserID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    CorrelationID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "CorrelationID",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CorrelationID_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CorrelationID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CorrelationID_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CorrelationID_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CorrelationID_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CorrelationID_OnValueChanged);
                private static void _CorrelationID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._CorrelationID, sf);
                }
                private static bool _CorrelationID_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.CorrelationID_IsReadOnly(ref result);
                    return result;
                }
                private static void _CorrelationID_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CorrelationID_Validate(r);
                }
                private static string _CorrelationID_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.CorrelationID;
                }
                private static void _CorrelationID_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CorrelationID = v;
                }
                private static void _CorrelationID_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.CorrelationID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    Account = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "Account",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Account_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Account_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Account_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Account_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Account_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Account_OnValueChanged);
                private static void _Account_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Account, sf);
                }
                private static bool _Account_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Account_IsReadOnly(ref result);
                    return result;
                }
                private static void _Account_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Account_Validate(r);
                }
                private static string _Account_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Account;
                }
                private static void _Account_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Account = v;
                }
                private static void _Account_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Account_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Entry
                    AutoTradeProcessCount = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Entry(
                        "AutoTradeProcessCount",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AutoTradeProcessCount_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AutoTradeProcessCount_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AutoTradeProcessCount_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AutoTradeProcessCount_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AutoTradeProcessCount_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AutoTradeProcessCount_OnValueChanged);
                private static void _AutoTradeProcessCount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._AutoTradeProcessCount, sf);
                }
                private static bool _AutoTradeProcessCount_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.AutoTradeProcessCount_IsReadOnly(ref result);
                    return result;
                }
                private static void _AutoTradeProcessCount_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AutoTradeProcessCount_Validate(r);
                }
                private static int _AutoTradeProcessCount_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.AutoTradeProcessCount;
                }
                private static void _AutoTradeProcessCount_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, int v)
                {
                    d.ImplementationEntity.AutoTradeProcessCount = v;
                }
                private static void _AutoTradeProcessCount_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.AutoTradeProcessCount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    AvgPx = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "AvgPx",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AvgPx_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AvgPx_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AvgPx_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AvgPx_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AvgPx_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._AvgPx_OnValueChanged);
                private static void _AvgPx_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._AvgPx, sf);
                }
                private static bool _AvgPx_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.AvgPx_IsReadOnly(ref result);
                    return result;
                }
                private static void _AvgPx_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AvgPx_Validate(r);
                }
                private static double _AvgPx_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.AvgPx;
                }
                private static void _AvgPx_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.AvgPx = v;
                }
                private static void _AvgPx_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.AvgPx_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    ClOrdID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "ClOrdID",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ClOrdID_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ClOrdID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ClOrdID_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ClOrdID_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ClOrdID_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ClOrdID_OnValueChanged);
                private static void _ClOrdID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._ClOrdID, sf);
                }
                private static bool _ClOrdID_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.ClOrdID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ClOrdID_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ClOrdID_Validate(r);
                }
                private static string _ClOrdID_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.ClOrdID;
                }
                private static void _ClOrdID_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ClOrdID = v;
                }
                private static void _ClOrdID_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.ClOrdID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    CumQty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "CumQty",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CumQty_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CumQty_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CumQty_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CumQty_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CumQty_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._CumQty_OnValueChanged);
                private static void _CumQty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._CumQty, sf);
                }
                private static bool _CumQty_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.CumQty_IsReadOnly(ref result);
                    return result;
                }
                private static void _CumQty_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CumQty_Validate(r);
                }
                private static double _CumQty_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.CumQty;
                }
                private static void _CumQty_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.CumQty = v;
                }
                private static void _CumQty_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.CumQty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    ExtendedOrdType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "ExtendedOrdType",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ExtendedOrdType_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ExtendedOrdType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ExtendedOrdType_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ExtendedOrdType_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ExtendedOrdType_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ExtendedOrdType_OnValueChanged);
                private static void _ExtendedOrdType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._ExtendedOrdType, sf);
                }
                private static bool _ExtendedOrdType_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.ExtendedOrdType_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExtendedOrdType_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExtendedOrdType_Validate(r);
                }
                private static string _ExtendedOrdType_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.ExtendedOrdType;
                }
                private static void _ExtendedOrdType_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ExtendedOrdType = v;
                }
                private static void _ExtendedOrdType_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.ExtendedOrdType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    HandlInst = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "HandlInst",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._HandlInst_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._HandlInst_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._HandlInst_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._HandlInst_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._HandlInst_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._HandlInst_OnValueChanged);
                private static void _HandlInst_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._HandlInst, sf);
                }
                private static bool _HandlInst_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.HandlInst_IsReadOnly(ref result);
                    return result;
                }
                private static void _HandlInst_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.HandlInst_Validate(r);
                }
                private static string _HandlInst_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.HandlInst;
                }
                private static void _HandlInst_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.HandlInst = v;
                }
                private static void _HandlInst_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.HandlInst_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    Identity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "Identity",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Identity_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Identity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Identity_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Identity_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Identity_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Identity_OnValueChanged);
                private static void _Identity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Identity, sf);
                }
                private static bool _Identity_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Identity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Identity_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Identity_Validate(r);
                }
                private static string _Identity_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Identity;
                }
                private static void _Identity_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Identity = v;
                }
                private static void _Identity_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Identity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Entry
                    IsAutoTrade = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Entry(
                        "IsAutoTrade",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsAutoTrade_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsAutoTrade_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsAutoTrade_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsAutoTrade_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsAutoTrade_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._IsAutoTrade_OnValueChanged);
                private static void _IsAutoTrade_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._IsAutoTrade, sf);
                }
                private static bool _IsAutoTrade_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.IsAutoTrade_IsReadOnly(ref result);
                    return result;
                }
                private static void _IsAutoTrade_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IsAutoTrade_Validate(r);
                }
                private static bool _IsAutoTrade_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.IsAutoTrade;
                }
                private static void _IsAutoTrade_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.IsAutoTrade = v;
                }
                private static void _IsAutoTrade_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.IsAutoTrade_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    LastPx = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "LastPx",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastPx_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastPx_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastPx_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastPx_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastPx_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastPx_OnValueChanged);
                private static void _LastPx_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._LastPx, sf);
                }
                private static bool _LastPx_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.LastPx_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastPx_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastPx_Validate(r);
                }
                private static double _LastPx_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.LastPx;
                }
                private static void _LastPx_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.LastPx = v;
                }
                private static void _LastPx_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.LastPx_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    LastQty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "LastQty",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastQty_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastQty_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastQty_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastQty_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastQty_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LastQty_OnValueChanged);
                private static void _LastQty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._LastQty, sf);
                }
                private static bool _LastQty_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.LastQty_IsReadOnly(ref result);
                    return result;
                }
                private static void _LastQty_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LastQty_Validate(r);
                }
                private static double _LastQty_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.LastQty;
                }
                private static void _LastQty_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.LastQty = v;
                }
                private static void _LastQty_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.LastQty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    LeavesQty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "LeavesQty",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LeavesQty_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LeavesQty_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LeavesQty_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LeavesQty_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LeavesQty_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LeavesQty_OnValueChanged);
                private static void _LeavesQty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._LeavesQty, sf);
                }
                private static bool _LeavesQty_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.LeavesQty_IsReadOnly(ref result);
                    return result;
                }
                private static void _LeavesQty_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LeavesQty_Validate(r);
                }
                private static double _LeavesQty_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.LeavesQty;
                }
                private static void _LeavesQty_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.LeavesQty = v;
                }
                private static void _LeavesQty_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.LeavesQty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    LocateReqd = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "LocateReqd",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocateReqd_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocateReqd_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocateReqd_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocateReqd_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocateReqd_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocateReqd_OnValueChanged);
                private static void _LocateReqd_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._LocateReqd, sf);
                }
                private static bool _LocateReqd_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.LocateReqd_IsReadOnly(ref result);
                    return result;
                }
                private static void _LocateReqd_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LocateReqd_Validate(r);
                }
                private static string _LocateReqd_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.LocateReqd;
                }
                private static void _LocateReqd_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LocateReqd = v;
                }
                private static void _LocateReqd_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.LocateReqd_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    LocationID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "LocationID",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocationID_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocationID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocationID_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocationID_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocationID_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._LocationID_OnValueChanged);
                private static void _LocationID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._LocationID, sf);
                }
                private static bool _LocationID_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.LocationID_IsReadOnly(ref result);
                    return result;
                }
                private static void _LocationID_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LocationID_Validate(r);
                }
                private static string _LocationID_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.LocationID;
                }
                private static void _LocationID_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LocationID = v;
                }
                private static void _LocationID_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.LocationID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>.Entry
                    MaxFloor = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>.Entry(
                        "MaxFloor",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._MaxFloor_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._MaxFloor_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._MaxFloor_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._MaxFloor_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._MaxFloor_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._MaxFloor_OnValueChanged);
                private static void _MaxFloor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._MaxFloor, sf);
                }
                private static bool _MaxFloor_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.MaxFloor_IsReadOnly(ref result);
                    return result;
                }
                private static void _MaxFloor_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MaxFloor_Validate(r);
                }
                private static long _MaxFloor_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.MaxFloor;
                }
                private static void _MaxFloor_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, long v)
                {
                    d.ImplementationEntity.MaxFloor = v;
                }
                private static void _MaxFloor_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.MaxFloor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    Mnemonic = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "Mnemonic",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Mnemonic_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Mnemonic_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Mnemonic_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Mnemonic_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Mnemonic_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Mnemonic_OnValueChanged);
                private static void _Mnemonic_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Mnemonic, sf);
                }
                private static bool _Mnemonic_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Mnemonic_IsReadOnly(ref result);
                    return result;
                }
                private static void _Mnemonic_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Mnemonic_Validate(r);
                }
                private static string _Mnemonic_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Mnemonic;
                }
                private static void _Mnemonic_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Mnemonic = v;
                }
                private static void _Mnemonic_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Mnemonic_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    OCAGroupName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "OCAGroupName",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OCAGroupName_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OCAGroupName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OCAGroupName_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OCAGroupName_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OCAGroupName_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OCAGroupName_OnValueChanged);
                private static void _OCAGroupName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._OCAGroupName, sf);
                }
                private static bool _OCAGroupName_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.OCAGroupName_IsReadOnly(ref result);
                    return result;
                }
                private static void _OCAGroupName_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OCAGroupName_Validate(r);
                }
                private static string _OCAGroupName_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.OCAGroupName;
                }
                private static void _OCAGroupName_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.OCAGroupName = v;
                }
                private static void _OCAGroupName_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.OCAGroupName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    OrdStatus = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "OrdStatus",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdStatus_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdStatus_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdStatus_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdStatus_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdStatus_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdStatus_OnValueChanged);
                private static void _OrdStatus_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._OrdStatus, sf);
                }
                private static bool _OrdStatus_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.OrdStatus_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrdStatus_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrdStatus_Validate(r);
                }
                private static string _OrdStatus_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.OrdStatus;
                }
                private static void _OrdStatus_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.OrdStatus = v;
                }
                private static void _OrdStatus_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.OrdStatus_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    OrdType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "OrdType",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdType_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdType_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdType_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdType_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdType_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrdType_OnValueChanged);
                private static void _OrdType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._OrdType, sf);
                }
                private static bool _OrdType_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.OrdType_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrdType_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrdType_Validate(r);
                }
                private static string _OrdType_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.OrdType;
                }
                private static void _OrdType_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.OrdType = v;
                }
                private static void _OrdType_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.OrdType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    OrderID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "OrderID",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderID_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderID_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderID_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderID_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderID_OnValueChanged);
                private static void _OrderID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderID, sf);
                }
                private static bool _OrderID_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.OrderID_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrderID_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrderID_Validate(r);
                }
                private static string _OrderID_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderID;
                }
                private static void _OrderID_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.OrderID = v;
                }
                private static void _OrderID_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.OrderID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>.Entry
                    OrderQty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>.Entry(
                        "OrderQty",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderQty_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderQty_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderQty_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderQty_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderQty_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrderQty_OnValueChanged);
                private static void _OrderQty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._OrderQty, sf);
                }
                private static bool _OrderQty_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.OrderQty_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrderQty_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrderQty_Validate(r);
                }
                private static long _OrderQty_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.OrderQty;
                }
                private static void _OrderQty_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, long v)
                {
                    d.ImplementationEntity.OrderQty = v;
                }
                private static void _OrderQty_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.OrderQty_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    OrigClOrdID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "OrigClOrdID",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrigClOrdID_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrigClOrdID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrigClOrdID_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrigClOrdID_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrigClOrdID_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._OrigClOrdID_OnValueChanged);
                private static void _OrigClOrdID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._OrigClOrdID, sf);
                }
                private static bool _OrigClOrdID_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.OrigClOrdID_IsReadOnly(ref result);
                    return result;
                }
                private static void _OrigClOrdID_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OrigClOrdID_Validate(r);
                }
                private static string _OrigClOrdID_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.OrigClOrdID;
                }
                private static void _OrigClOrdID_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.OrigClOrdID = v;
                }
                private static void _OrigClOrdID_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.OrigClOrdID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    ParentIdentity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "ParentIdentity",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ParentIdentity_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ParentIdentity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ParentIdentity_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ParentIdentity_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ParentIdentity_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ParentIdentity_OnValueChanged);
                private static void _ParentIdentity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._ParentIdentity, sf);
                }
                private static bool _ParentIdentity_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.ParentIdentity_IsReadOnly(ref result);
                    return result;
                }
                private static void _ParentIdentity_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ParentIdentity_Validate(r);
                }
                private static string _ParentIdentity_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.ParentIdentity;
                }
                private static void _ParentIdentity_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ParentIdentity = v;
                }
                private static void _ParentIdentity_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.ParentIdentity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    Price = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "Price",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Price_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Price_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Price_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Price_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Price_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Price_OnValueChanged);
                private static void _Price_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Price, sf);
                }
                private static bool _Price_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Price_IsReadOnly(ref result);
                    return result;
                }
                private static void _Price_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Price_Validate(r);
                }
                private static double _Price_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Price;
                }
                private static void _Price_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.Price = v;
                }
                private static void _Price_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Price_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    QuantityLimit = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "QuantityLimit",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuantityLimit_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuantityLimit_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuantityLimit_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuantityLimit_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuantityLimit_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._QuantityLimit_OnValueChanged);
                private static void _QuantityLimit_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._QuantityLimit, sf);
                }
                private static bool _QuantityLimit_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.QuantityLimit_IsReadOnly(ref result);
                    return result;
                }
                private static void _QuantityLimit_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QuantityLimit_Validate(r);
                }
                private static double _QuantityLimit_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.QuantityLimit;
                }
                private static void _QuantityLimit_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.QuantityLimit = v;
                }
                private static void _QuantityLimit_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.QuantityLimit_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    ShortSaleLocate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "ShortSaleLocate",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ShortSaleLocate_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ShortSaleLocate_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ShortSaleLocate_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ShortSaleLocate_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ShortSaleLocate_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._ShortSaleLocate_OnValueChanged);
                private static void _ShortSaleLocate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._ShortSaleLocate, sf);
                }
                private static bool _ShortSaleLocate_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.ShortSaleLocate_IsReadOnly(ref result);
                    return result;
                }
                private static void _ShortSaleLocate_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ShortSaleLocate_Validate(r);
                }
                private static string _ShortSaleLocate_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.ShortSaleLocate;
                }
                private static void _ShortSaleLocate_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ShortSaleLocate = v;
                }
                private static void _ShortSaleLocate_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.ShortSaleLocate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    Side = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "Side",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Side_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Side_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Side_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Side_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Side_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Side_OnValueChanged);
                private static void _Side_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Side, sf);
                }
                private static bool _Side_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Side_IsReadOnly(ref result);
                    return result;
                }
                private static void _Side_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Side_Validate(r);
                }
                private static string _Side_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Side;
                }
                private static void _Side_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Side = v;
                }
                private static void _Side_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Side_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry
                    StopPx = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Entry(
                        "StopPx",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StopPx_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StopPx_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StopPx_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StopPx_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StopPx_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StopPx_OnValueChanged);
                private static void _StopPx_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._StopPx, sf);
                }
                private static bool _StopPx_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.StopPx_IsReadOnly(ref result);
                    return result;
                }
                private static void _StopPx_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StopPx_Validate(r);
                }
                private static double _StopPx_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.StopPx;
                }
                private static void _StopPx_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, double v)
                {
                    d.ImplementationEntity.StopPx = v;
                }
                private static void _StopPx_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.StopPx_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    StrategyName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "StrategyName",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StrategyName_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StrategyName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StrategyName_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StrategyName_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StrategyName_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._StrategyName_OnValueChanged);
                private static void _StrategyName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._StrategyName, sf);
                }
                private static bool _StrategyName_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.StrategyName_IsReadOnly(ref result);
                    return result;
                }
                private static void _StrategyName_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StrategyName_Validate(r);
                }
                private static string _StrategyName_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.StrategyName;
                }
                private static void _StrategyName_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.StrategyName = v;
                }
                private static void _StrategyName_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.StrategyName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    Tag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "Tag",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Tag_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Tag_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Tag_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Tag_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Tag_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Tag_OnValueChanged);
                private static void _Tag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Tag, sf);
                }
                private static bool _Tag_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Tag_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tag_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tag_Validate(r);
                }
                private static string _Tag_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Tag;
                }
                private static void _Tag_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Tag = v;
                }
                private static void _Tag_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Tag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    Text = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "Text",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Text_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Text_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Text_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Text_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Text_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._Text_OnValueChanged);
                private static void _Text_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._Text, sf);
                }
                private static bool _Text_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.Text_IsReadOnly(ref result);
                    return result;
                }
                private static void _Text_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Text_Validate(r);
                }
                private static string _Text_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.Text;
                }
                private static void _Text_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Text = v;
                }
                private static void _Text_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.Text_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    TimeInForce = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "TimeInForce",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TimeInForce_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TimeInForce_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TimeInForce_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TimeInForce_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TimeInForce_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TimeInForce_OnValueChanged);
                private static void _TimeInForce_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._TimeInForce, sf);
                }
                private static bool _TimeInForce_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.TimeInForce_IsReadOnly(ref result);
                    return result;
                }
                private static void _TimeInForce_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TimeInForce_Validate(r);
                }
                private static string _TimeInForce_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.TimeInForce;
                }
                private static void _TimeInForce_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TimeInForce = v;
                }
                private static void _TimeInForce_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.TimeInForce_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    TradeVenue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "TradeVenue",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TradeVenue_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TradeVenue_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TradeVenue_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TradeVenue_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TradeVenue_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TradeVenue_OnValueChanged);
                private static void _TradeVenue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._TradeVenue, sf);
                }
                private static bool _TradeVenue_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.TradeVenue_IsReadOnly(ref result);
                    return result;
                }
                private static void _TradeVenue_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TradeVenue_Validate(r);
                }
                private static string _TradeVenue_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.TradeVenue;
                }
                private static void _TradeVenue_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TradeVenue = v;
                }
                private static void _TradeVenue_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.TradeVenue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    TransactTime = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "TransactTime",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TransactTime_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TransactTime_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TransactTime_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TransactTime_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TransactTime_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TransactTime_OnValueChanged);
                private static void _TransactTime_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._TransactTime, sf);
                }
                private static bool _TransactTime_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.TransactTime_IsReadOnly(ref result);
                    return result;
                }
                private static void _TransactTime_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TransactTime_Validate(r);
                }
                private static string _TransactTime_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.TransactTime;
                }
                private static void _TransactTime_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TransactTime = v;
                }
                private static void _TransactTime_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.TransactTime_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry
                    TriggerOrderID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Entry(
                        "TriggerOrderID",
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TriggerOrderID_Stub,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TriggerOrderID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TriggerOrderID_Validate,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TriggerOrderID_GetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TriggerOrderID_SetImplementationValue,
                        global::LightSwitchApplication.Order.DetailsClass.PropertySetProperties._TriggerOrderID_OnValueChanged);
                private static void _TriggerOrderID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Order.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data> c, global::LightSwitchApplication.Order.DetailsClass d, object sf)
                {
                    c(d, ref d._TriggerOrderID, sf);
                }
                private static bool _TriggerOrderID_ComputeIsReadOnly(global::LightSwitchApplication.Order e)
                {
                    bool result = false;
                    e.TriggerOrderID_IsReadOnly(ref result);
                    return result;
                }
                private static void _TriggerOrderID_Validate(global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TriggerOrderID_Validate(r);
                }
                private static string _TriggerOrderID_GetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d)
                {
                    return d.ImplementationEntity.TriggerOrderID;
                }
                private static void _TriggerOrderID_SetImplementationValue(global::LightSwitchApplication.Order.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TriggerOrderID = v;
                }
                private static void _TriggerOrderID_OnValueChanged(global::LightSwitchApplication.Order e)
                {
                    e.TriggerOrderID_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _UserID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _CorrelationID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _Account;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, int>.Data _AutoTradeProcessCount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _AvgPx;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _ClOrdID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _CumQty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _ExtendedOrdType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _HandlInst;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _Identity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, bool>.Data _IsAutoTrade;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _LastPx;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _LastQty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _LeavesQty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _LocateReqd;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _LocationID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>.Data _MaxFloor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _Mnemonic;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _OCAGroupName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _OrdStatus;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _OrdType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _OrderID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, long>.Data _OrderQty;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _OrigClOrdID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _ParentIdentity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _Price;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _QuantityLimit;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _ShortSaleLocate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _Side;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, double>.Data _StopPx;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _StrategyName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _Tag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _Text;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _TimeInForce;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _TradeVenue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _TransactTime;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Order, global::LightSwitchApplication.Order.DetailsClass, string>.Data _TriggerOrderID;
            
        }
    
        #endregion
    }
    
    #endregion
}



//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Allocation : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass>
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Allocation()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Allocation(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Allocation> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Allocation.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocation_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocation_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ID
        {
            get
            {
                return global::LightSwitchApplication.Allocation.DetailsClass.GetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.ID);
            }
            set
            {
                global::LightSwitchApplication.Allocation.DetailsClass.SetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Allocation.DetailsClass.GetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Allocation.DetailsClass.SetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Mnemonic
        {
            get
            {
                return global::LightSwitchApplication.Allocation.DetailsClass.GetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.Mnemonic);
            }
            set
            {
                global::LightSwitchApplication.Allocation.DetailsClass.SetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.Mnemonic, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double MinOrderSize
        {
            get
            {
                return global::LightSwitchApplication.Allocation.DetailsClass.GetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.MinOrderSize);
            }
            set
            {
                global::LightSwitchApplication.Allocation.DetailsClass.SetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.MinOrderSize, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinOrderSize_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinOrderSize_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MinOrderSize_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double TotalQty
        {
            get
            {
                return global::LightSwitchApplication.Allocation.DetailsClass.GetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.TotalQty);
            }
            set
            {
                global::LightSwitchApplication.Allocation.DetailsClass.SetValue(this, global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.TotalQty, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalQty_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalQty_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TotalQty_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Allocation,
                global::LightSwitchApplication.Allocation.DetailsClass,
                global::LightSwitchApplication.Allocation.DetailsClass.IImplementation,
                global::LightSwitchApplication.Allocation.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass>.Entry
                __AllocationEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass>.Entry(
                    global::LightSwitchApplication.Allocation.DetailsClass.__Allocation_CreateNew,
                    global::LightSwitchApplication.Allocation.DetailsClass.__Allocation_Created,
                    global::LightSwitchApplication.Allocation.DetailsClass.__Allocation_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Allocation __Allocation_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Allocation> es)
            {
                return new global::LightSwitchApplication.Allocation(es);
            }
            private static void __Allocation_Created(global::LightSwitchApplication.Allocation e)
            {
                e.Allocation_Created();
            }
            private static bool __Allocation_AllowSaveWithErrors(global::LightSwitchApplication.Allocation e)
            {
                bool result = false;
                e.Allocation_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Allocation.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string> Mnemonic
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.Mnemonic) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double> MinOrderSize
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.MinOrderSize) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double> TotalQty
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties.TotalQty) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string ID { get; set; }
                new string Name { get; set; }
                new string Mnemonic { get; set; }
                new double MinOrderSize { get; set; }
                new double TotalQty { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Entry(
                        "ID",
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._ID_SetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Allocation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Data> c, global::LightSwitchApplication.Allocation.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Allocation e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Allocation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static string _ID_GetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_SetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ID = v;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Allocation e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Allocation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Data> c, global::LightSwitchApplication.Allocation.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Allocation e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Allocation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Allocation e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Entry
                    Mnemonic = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Entry(
                        "Mnemonic",
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Mnemonic_Stub,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Mnemonic_ComputeIsReadOnly,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Mnemonic_Validate,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Mnemonic_GetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Mnemonic_SetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._Mnemonic_OnValueChanged);
                private static void _Mnemonic_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Allocation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Data> c, global::LightSwitchApplication.Allocation.DetailsClass d, object sf)
                {
                    c(d, ref d._Mnemonic, sf);
                }
                private static bool _Mnemonic_ComputeIsReadOnly(global::LightSwitchApplication.Allocation e)
                {
                    bool result = false;
                    e.Mnemonic_IsReadOnly(ref result);
                    return result;
                }
                private static void _Mnemonic_Validate(global::LightSwitchApplication.Allocation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Mnemonic_Validate(r);
                }
                private static string _Mnemonic_GetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d)
                {
                    return d.ImplementationEntity.Mnemonic;
                }
                private static void _Mnemonic_SetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Mnemonic = v;
                }
                private static void _Mnemonic_OnValueChanged(global::LightSwitchApplication.Allocation e)
                {
                    e.Mnemonic_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>.Entry
                    MinOrderSize = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>.Entry(
                        "MinOrderSize",
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._MinOrderSize_Stub,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._MinOrderSize_ComputeIsReadOnly,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._MinOrderSize_Validate,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._MinOrderSize_GetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._MinOrderSize_SetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._MinOrderSize_OnValueChanged);
                private static void _MinOrderSize_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Allocation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>.Data> c, global::LightSwitchApplication.Allocation.DetailsClass d, object sf)
                {
                    c(d, ref d._MinOrderSize, sf);
                }
                private static bool _MinOrderSize_ComputeIsReadOnly(global::LightSwitchApplication.Allocation e)
                {
                    bool result = false;
                    e.MinOrderSize_IsReadOnly(ref result);
                    return result;
                }
                private static void _MinOrderSize_Validate(global::LightSwitchApplication.Allocation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MinOrderSize_Validate(r);
                }
                private static double _MinOrderSize_GetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d)
                {
                    return d.ImplementationEntity.MinOrderSize;
                }
                private static void _MinOrderSize_SetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d, double v)
                {
                    d.ImplementationEntity.MinOrderSize = v;
                }
                private static void _MinOrderSize_OnValueChanged(global::LightSwitchApplication.Allocation e)
                {
                    e.MinOrderSize_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>.Entry
                    TotalQty = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>.Entry(
                        "TotalQty",
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._TotalQty_Stub,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._TotalQty_ComputeIsReadOnly,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._TotalQty_Validate,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._TotalQty_GetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._TotalQty_SetImplementationValue,
                        global::LightSwitchApplication.Allocation.DetailsClass.PropertySetProperties._TotalQty_OnValueChanged);
                private static void _TotalQty_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Allocation.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>.Data> c, global::LightSwitchApplication.Allocation.DetailsClass d, object sf)
                {
                    c(d, ref d._TotalQty, sf);
                }
                private static bool _TotalQty_ComputeIsReadOnly(global::LightSwitchApplication.Allocation e)
                {
                    bool result = false;
                    e.TotalQty_IsReadOnly(ref result);
                    return result;
                }
                private static void _TotalQty_Validate(global::LightSwitchApplication.Allocation e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TotalQty_Validate(r);
                }
                private static double _TotalQty_GetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d)
                {
                    return d.ImplementationEntity.TotalQty;
                }
                private static void _TotalQty_SetImplementationValue(global::LightSwitchApplication.Allocation.DetailsClass d, double v)
                {
                    d.ImplementationEntity.TotalQty = v;
                }
                private static void _TotalQty_OnValueChanged(global::LightSwitchApplication.Allocation e)
                {
                    e.TotalQty_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, string>.Data _Mnemonic;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>.Data _MinOrderSize;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Allocation, global::LightSwitchApplication.Allocation.DetailsClass, double>.Data _TotalQty;
            
        }
    
        #endregion
    }
    
    #endregion
}

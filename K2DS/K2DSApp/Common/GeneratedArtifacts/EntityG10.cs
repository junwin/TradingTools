

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Venue : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass>
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Venue()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Venue(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Venue> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Venue.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venue_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venue_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string AccountNumber
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.AccountNumber);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.AccountNumber, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountNumber_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountNumber_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountNumber_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BeginString
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.BeginString);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.BeginString, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BeginString_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BeginString_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BeginString_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CancelBag
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.CancelBag);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.CancelBag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CancelBag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CancelBag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CancelBag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Code
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.Code);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.Code, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Code_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string VenueCode
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.VenueCode);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.VenueCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VenueCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VenueCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void VenueCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TargetVenue
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.TargetVenue);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.TargetVenue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetVenue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetVenue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetVenue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DataFeedVenue
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DataFeedVenue);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DataFeedVenue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataFeedVenue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataFeedVenue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DataFeedVenue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DriverCode
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DriverCode);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DriverCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DriverCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DriverCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DriverCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string NOSBag
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.NOSBag);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.NOSBag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NOSBag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NOSBag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NOSBag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Name
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.Name);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.Name, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Name_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ReplaceBag
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.ReplaceBag);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.ReplaceBag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReplaceBag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReplaceBag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ReplaceBag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SID
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.SID);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.SID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TID
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.TID);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.TID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DefaultCurrencyCode
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultCurrencyCode);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultCurrencyCode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultCurrencyCode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultCurrencyCode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultCurrencyCode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DefaultSecurityExchange
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultSecurityExchange);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultSecurityExchange, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultSecurityExchange_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultSecurityExchange_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultSecurityExchange_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DefaultCFICode
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultCFICode);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultCFICode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultCFICode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultCFICode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DefaultCFICode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool UseSymbol
        {
            get
            {
                return global::LightSwitchApplication.Venue.DetailsClass.GetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.UseSymbol);
            }
            set
            {
                global::LightSwitchApplication.Venue.DetailsClass.SetValue(this, global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.UseSymbol, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UseSymbol_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UseSymbol_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UseSymbol_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Venue,
                global::LightSwitchApplication.Venue.DetailsClass,
                global::LightSwitchApplication.Venue.DetailsClass.IImplementation,
                global::LightSwitchApplication.Venue.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.AccountNumber;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass>.Entry
                __VenueEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass>.Entry(
                    global::LightSwitchApplication.Venue.DetailsClass.__Venue_CreateNew,
                    global::LightSwitchApplication.Venue.DetailsClass.__Venue_Created,
                    global::LightSwitchApplication.Venue.DetailsClass.__Venue_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Venue __Venue_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Venue> es)
            {
                return new global::LightSwitchApplication.Venue(es);
            }
            private static void __Venue_Created(global::LightSwitchApplication.Venue e)
            {
                e.Venue_Created();
            }
            private static bool __Venue_AllowSaveWithErrors(global::LightSwitchApplication.Venue e)
            {
                bool result = false;
                e.Venue_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Venue.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> AccountNumber
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.AccountNumber) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> BeginString
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.BeginString) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> CancelBag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.CancelBag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> Code
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.Code) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> VenueCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.VenueCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> TargetVenue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.TargetVenue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> DataFeedVenue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DataFeedVenue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> DriverCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DriverCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> NOSBag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.NOSBag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> Name
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.Name) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> ReplaceBag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.ReplaceBag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> SID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.SID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> TID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.TID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> DefaultCurrencyCode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultCurrencyCode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> DefaultSecurityExchange
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultSecurityExchange) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string> DefaultCFICode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.DefaultCFICode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, bool> UseSymbol
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties.UseSymbol) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, bool>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string AccountNumber { get; set; }
                new string BeginString { get; set; }
                new string CancelBag { get; set; }
                new string Code { get; set; }
                new string VenueCode { get; set; }
                new string TargetVenue { get; set; }
                new string DataFeedVenue { get; set; }
                new string DriverCode { get; set; }
                new string NOSBag { get; set; }
                new string Name { get; set; }
                new string ReplaceBag { get; set; }
                new string SID { get; set; }
                new string TID { get; set; }
                new string DefaultCurrencyCode { get; set; }
                new string DefaultSecurityExchange { get; set; }
                new string DefaultCFICode { get; set; }
                new bool UseSymbol { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    AccountNumber = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "AccountNumber",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._AccountNumber_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._AccountNumber_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._AccountNumber_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._AccountNumber_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._AccountNumber_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._AccountNumber_OnValueChanged);
                private static void _AccountNumber_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._AccountNumber, sf);
                }
                private static bool _AccountNumber_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.AccountNumber_IsReadOnly(ref result);
                    return result;
                }
                private static void _AccountNumber_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AccountNumber_Validate(r);
                }
                private static string _AccountNumber_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.AccountNumber;
                }
                private static void _AccountNumber_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.AccountNumber = v;
                }
                private static void _AccountNumber_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.AccountNumber_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    BeginString = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "BeginString",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._BeginString_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._BeginString_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._BeginString_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._BeginString_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._BeginString_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._BeginString_OnValueChanged);
                private static void _BeginString_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._BeginString, sf);
                }
                private static bool _BeginString_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.BeginString_IsReadOnly(ref result);
                    return result;
                }
                private static void _BeginString_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BeginString_Validate(r);
                }
                private static string _BeginString_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.BeginString;
                }
                private static void _BeginString_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BeginString = v;
                }
                private static void _BeginString_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.BeginString_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    CancelBag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "CancelBag",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._CancelBag_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._CancelBag_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._CancelBag_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._CancelBag_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._CancelBag_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._CancelBag_OnValueChanged);
                private static void _CancelBag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._CancelBag, sf);
                }
                private static bool _CancelBag_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.CancelBag_IsReadOnly(ref result);
                    return result;
                }
                private static void _CancelBag_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CancelBag_Validate(r);
                }
                private static string _CancelBag_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.CancelBag;
                }
                private static void _CancelBag_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CancelBag = v;
                }
                private static void _CancelBag_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.CancelBag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    Code = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "Code",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Code_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Code_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Code_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Code_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Code_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Code_OnValueChanged);
                private static void _Code_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._Code, sf);
                }
                private static bool _Code_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.Code_IsReadOnly(ref result);
                    return result;
                }
                private static void _Code_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Code_Validate(r);
                }
                private static string _Code_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.Code;
                }
                private static void _Code_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Code = v;
                }
                private static void _Code_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.Code_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    VenueCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "VenueCode",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._VenueCode_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._VenueCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._VenueCode_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._VenueCode_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._VenueCode_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._VenueCode_OnValueChanged);
                private static void _VenueCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._VenueCode, sf);
                }
                private static bool _VenueCode_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.VenueCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _VenueCode_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.VenueCode_Validate(r);
                }
                private static string _VenueCode_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.VenueCode;
                }
                private static void _VenueCode_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.VenueCode = v;
                }
                private static void _VenueCode_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.VenueCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    TargetVenue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "TargetVenue",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TargetVenue_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TargetVenue_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TargetVenue_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TargetVenue_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TargetVenue_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TargetVenue_OnValueChanged);
                private static void _TargetVenue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetVenue, sf);
                }
                private static bool _TargetVenue_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.TargetVenue_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetVenue_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetVenue_Validate(r);
                }
                private static string _TargetVenue_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetVenue;
                }
                private static void _TargetVenue_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TargetVenue = v;
                }
                private static void _TargetVenue_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.TargetVenue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    DataFeedVenue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "DataFeedVenue",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DataFeedVenue_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DataFeedVenue_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DataFeedVenue_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DataFeedVenue_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DataFeedVenue_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DataFeedVenue_OnValueChanged);
                private static void _DataFeedVenue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._DataFeedVenue, sf);
                }
                private static bool _DataFeedVenue_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.DataFeedVenue_IsReadOnly(ref result);
                    return result;
                }
                private static void _DataFeedVenue_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DataFeedVenue_Validate(r);
                }
                private static string _DataFeedVenue_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.DataFeedVenue;
                }
                private static void _DataFeedVenue_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DataFeedVenue = v;
                }
                private static void _DataFeedVenue_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.DataFeedVenue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    DriverCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "DriverCode",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DriverCode_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DriverCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DriverCode_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DriverCode_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DriverCode_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DriverCode_OnValueChanged);
                private static void _DriverCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._DriverCode, sf);
                }
                private static bool _DriverCode_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.DriverCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _DriverCode_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DriverCode_Validate(r);
                }
                private static string _DriverCode_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.DriverCode;
                }
                private static void _DriverCode_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DriverCode = v;
                }
                private static void _DriverCode_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.DriverCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    NOSBag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "NOSBag",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._NOSBag_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._NOSBag_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._NOSBag_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._NOSBag_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._NOSBag_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._NOSBag_OnValueChanged);
                private static void _NOSBag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._NOSBag, sf);
                }
                private static bool _NOSBag_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.NOSBag_IsReadOnly(ref result);
                    return result;
                }
                private static void _NOSBag_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NOSBag_Validate(r);
                }
                private static string _NOSBag_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.NOSBag;
                }
                private static void _NOSBag_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.NOSBag = v;
                }
                private static void _NOSBag_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.NOSBag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    Name = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "Name",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Name_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Name_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Name_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Name_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Name_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._Name_OnValueChanged);
                private static void _Name_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._Name, sf);
                }
                private static bool _Name_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.Name_IsReadOnly(ref result);
                    return result;
                }
                private static void _Name_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Name_Validate(r);
                }
                private static string _Name_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.Name;
                }
                private static void _Name_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Name = v;
                }
                private static void _Name_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.Name_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    ReplaceBag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "ReplaceBag",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._ReplaceBag_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._ReplaceBag_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._ReplaceBag_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._ReplaceBag_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._ReplaceBag_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._ReplaceBag_OnValueChanged);
                private static void _ReplaceBag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._ReplaceBag, sf);
                }
                private static bool _ReplaceBag_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.ReplaceBag_IsReadOnly(ref result);
                    return result;
                }
                private static void _ReplaceBag_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ReplaceBag_Validate(r);
                }
                private static string _ReplaceBag_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.ReplaceBag;
                }
                private static void _ReplaceBag_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ReplaceBag = v;
                }
                private static void _ReplaceBag_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.ReplaceBag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    SID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "SID",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._SID_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._SID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._SID_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._SID_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._SID_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._SID_OnValueChanged);
                private static void _SID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._SID, sf);
                }
                private static bool _SID_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.SID_IsReadOnly(ref result);
                    return result;
                }
                private static void _SID_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SID_Validate(r);
                }
                private static string _SID_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.SID;
                }
                private static void _SID_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SID = v;
                }
                private static void _SID_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.SID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    TID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "TID",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TID_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TID_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TID_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TID_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._TID_OnValueChanged);
                private static void _TID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._TID, sf);
                }
                private static bool _TID_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.TID_IsReadOnly(ref result);
                    return result;
                }
                private static void _TID_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TID_Validate(r);
                }
                private static string _TID_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.TID;
                }
                private static void _TID_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TID = v;
                }
                private static void _TID_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.TID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    DefaultCurrencyCode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "DefaultCurrencyCode",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCurrencyCode_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCurrencyCode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCurrencyCode_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCurrencyCode_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCurrencyCode_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCurrencyCode_OnValueChanged);
                private static void _DefaultCurrencyCode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._DefaultCurrencyCode, sf);
                }
                private static bool _DefaultCurrencyCode_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.DefaultCurrencyCode_IsReadOnly(ref result);
                    return result;
                }
                private static void _DefaultCurrencyCode_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DefaultCurrencyCode_Validate(r);
                }
                private static string _DefaultCurrencyCode_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.DefaultCurrencyCode;
                }
                private static void _DefaultCurrencyCode_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DefaultCurrencyCode = v;
                }
                private static void _DefaultCurrencyCode_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.DefaultCurrencyCode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    DefaultSecurityExchange = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "DefaultSecurityExchange",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultSecurityExchange_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultSecurityExchange_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultSecurityExchange_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultSecurityExchange_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultSecurityExchange_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultSecurityExchange_OnValueChanged);
                private static void _DefaultSecurityExchange_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._DefaultSecurityExchange, sf);
                }
                private static bool _DefaultSecurityExchange_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.DefaultSecurityExchange_IsReadOnly(ref result);
                    return result;
                }
                private static void _DefaultSecurityExchange_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DefaultSecurityExchange_Validate(r);
                }
                private static string _DefaultSecurityExchange_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.DefaultSecurityExchange;
                }
                private static void _DefaultSecurityExchange_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DefaultSecurityExchange = v;
                }
                private static void _DefaultSecurityExchange_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.DefaultSecurityExchange_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry
                    DefaultCFICode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Entry(
                        "DefaultCFICode",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCFICode_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCFICode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCFICode_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCFICode_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCFICode_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._DefaultCFICode_OnValueChanged);
                private static void _DefaultCFICode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._DefaultCFICode, sf);
                }
                private static bool _DefaultCFICode_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.DefaultCFICode_IsReadOnly(ref result);
                    return result;
                }
                private static void _DefaultCFICode_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DefaultCFICode_Validate(r);
                }
                private static string _DefaultCFICode_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.DefaultCFICode;
                }
                private static void _DefaultCFICode_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DefaultCFICode = v;
                }
                private static void _DefaultCFICode_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.DefaultCFICode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, bool>.Entry
                    UseSymbol = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, bool>.Entry(
                        "UseSymbol",
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._UseSymbol_Stub,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._UseSymbol_ComputeIsReadOnly,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._UseSymbol_Validate,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._UseSymbol_GetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._UseSymbol_SetImplementationValue,
                        global::LightSwitchApplication.Venue.DetailsClass.PropertySetProperties._UseSymbol_OnValueChanged);
                private static void _UseSymbol_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Venue.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, bool>.Data> c, global::LightSwitchApplication.Venue.DetailsClass d, object sf)
                {
                    c(d, ref d._UseSymbol, sf);
                }
                private static bool _UseSymbol_ComputeIsReadOnly(global::LightSwitchApplication.Venue e)
                {
                    bool result = false;
                    e.UseSymbol_IsReadOnly(ref result);
                    return result;
                }
                private static void _UseSymbol_Validate(global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UseSymbol_Validate(r);
                }
                private static bool _UseSymbol_GetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d)
                {
                    return d.ImplementationEntity.UseSymbol;
                }
                private static void _UseSymbol_SetImplementationValue(global::LightSwitchApplication.Venue.DetailsClass d, bool v)
                {
                    d.ImplementationEntity.UseSymbol = v;
                }
                private static void _UseSymbol_OnValueChanged(global::LightSwitchApplication.Venue e)
                {
                    e.UseSymbol_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _AccountNumber;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _BeginString;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _CancelBag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _Code;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _VenueCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _TargetVenue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _DataFeedVenue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _DriverCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _NOSBag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _Name;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _ReplaceBag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _SID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _TID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _DefaultCurrencyCode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _DefaultSecurityExchange;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, string>.Data _DefaultCFICode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Venue, global::LightSwitchApplication.Venue.DetailsClass, bool>.Data _UseSymbol;
            
        }
    
        #endregion
    }
    
    #endregion
}

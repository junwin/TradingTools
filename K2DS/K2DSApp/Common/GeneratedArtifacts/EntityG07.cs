

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Product : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Product()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Product(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Product> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Product.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CFICode
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.CFICode);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.CFICode, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CFICode_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CFICode_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CFICode_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Currency
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Currency);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Currency, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currency_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currency_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Currency_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string DriverID
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.DriverID);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.DriverID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DriverID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DriverID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DriverID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Exchange
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Exchange);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Exchange, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exchange_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exchange_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Exchange_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string IDSource
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.IDSource);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.IDSource, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IDSource_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IDSource_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void IDSource_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Identity
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Identity);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Identity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Identity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Identity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Identity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string LongName
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.LongName);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.LongName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void LongName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Commodity
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Commodity);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Commodity, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commodity_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commodity_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Commodity_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MMY
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.MMY);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.MMY, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MMY_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MMY_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MMY_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string GenericName
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.GenericName);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.GenericName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GenericName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GenericName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void GenericName_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Mnemonic
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Mnemonic);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Mnemonic, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mnemonic_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int QtyIncrement
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.QtyIncrement);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.QtyIncrement, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QtyIncrement_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QtyIncrement_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QtyIncrement_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SecurityID
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.SecurityID);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.SecurityID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SecurityID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SecurityID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SecurityID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double StrikePrice
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.StrikePrice);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.StrikePrice, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StrikePrice_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StrikePrice_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StrikePrice_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Symbol
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Symbol);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Symbol, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Symbol_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Symbol_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Symbol_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Tag
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Tag);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Tag, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Tag_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double TickSize
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TickSize);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TickSize, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickSize_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickSize_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickSize_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double TickValue
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TickValue);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TickValue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickValue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickValue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TickValue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int NumberDecimalPlaces
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.NumberDecimalPlaces);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.NumberDecimalPlaces, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberDecimalPlaces_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberDecimalPlaces_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NumberDecimalPlaces_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int PriceFeedQuantityMultiplier
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.PriceFeedQuantityMultiplier);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.PriceFeedQuantityMultiplier, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceFeedQuantityMultiplier_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceFeedQuantityMultiplier_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void PriceFeedQuantityMultiplier_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public double ContractSize
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.ContractSize);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.ContractSize, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractSize_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractSize_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ContractSize_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string TradeVenue
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TradeVenue);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TradeVenue, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TradeVenue_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TradeVenue_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TradeVenue_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string BrokerService
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.BrokerService);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.BrokerService, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrokerService_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrokerService_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BrokerService_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ExDestination
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.ExDestination);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.ExDestination, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExDestination_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExDestination_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ExDestination_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int DepthLevelCount
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.DepthLevelCount);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.DepthLevelCount, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepthLevelCount_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepthLevelCount_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DepthLevelCount_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string SyntheticPriceCalcName
        {
            get
            {
                return global::LightSwitchApplication.Product.DetailsClass.GetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.SyntheticPriceCalcName);
            }
            set
            {
                global::LightSwitchApplication.Product.DetailsClass.SetValue(this, global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.SyntheticPriceCalcName, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SyntheticPriceCalcName_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SyntheticPriceCalcName_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SyntheticPriceCalcName_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Product,
                global::LightSwitchApplication.Product.DetailsClass,
                global::LightSwitchApplication.Product.DetailsClass.IImplementation,
                global::LightSwitchApplication.Product.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.CFICode;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>.Entry
                __ProductEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>.Entry(
                    global::LightSwitchApplication.Product.DetailsClass.__Product_CreateNew,
                    global::LightSwitchApplication.Product.DetailsClass.__Product_Created,
                    global::LightSwitchApplication.Product.DetailsClass.__Product_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Product __Product_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Product> es)
            {
                return new global::LightSwitchApplication.Product(es);
            }
            private static void __Product_Created(global::LightSwitchApplication.Product e)
            {
                e.Product_Created();
            }
            private static bool __Product_AllowSaveWithErrors(global::LightSwitchApplication.Product e)
            {
                bool result = false;
                e.Product_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Product.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> CFICode
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.CFICode) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> Currency
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Currency) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> DriverID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.DriverID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> Exchange
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Exchange) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> IDSource
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.IDSource) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> Identity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Identity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> LongName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.LongName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> Commodity
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Commodity) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> MMY
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.MMY) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> GenericName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.GenericName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> Mnemonic
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Mnemonic) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int> QtyIncrement
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.QtyIncrement) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> SecurityID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.SecurityID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double> StrikePrice
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.StrikePrice) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> Symbol
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Symbol) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> Tag
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.Tag) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double> TickSize
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TickSize) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double> TickValue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TickValue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int> NumberDecimalPlaces
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.NumberDecimalPlaces) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int> PriceFeedQuantityMultiplier
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.PriceFeedQuantityMultiplier) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double> ContractSize
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.ContractSize) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> TradeVenue
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.TradeVenue) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> BrokerService
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.BrokerService) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> ExDestination
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.ExDestination) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int> DepthLevelCount
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.DepthLevelCount) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string> SyntheticPriceCalcName
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties.SyntheticPriceCalcName) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new string CFICode { get; set; }
                new string Currency { get; set; }
                new string DriverID { get; set; }
                new string Exchange { get; set; }
                new string IDSource { get; set; }
                new string Identity { get; set; }
                new string LongName { get; set; }
                new string Commodity { get; set; }
                new string MMY { get; set; }
                new string GenericName { get; set; }
                new string Mnemonic { get; set; }
                new int QtyIncrement { get; set; }
                new string SecurityID { get; set; }
                new double StrikePrice { get; set; }
                new string Symbol { get; set; }
                new string Tag { get; set; }
                new double TickSize { get; set; }
                new double TickValue { get; set; }
                new int NumberDecimalPlaces { get; set; }
                new int PriceFeedQuantityMultiplier { get; set; }
                new double ContractSize { get; set; }
                new string TradeVenue { get; set; }
                new string BrokerService { get; set; }
                new string ExDestination { get; set; }
                new int DepthLevelCount { get; set; }
                new string SyntheticPriceCalcName { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    CFICode = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "CFICode",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._CFICode_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._CFICode_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._CFICode_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._CFICode_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._CFICode_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._CFICode_OnValueChanged);
                private static void _CFICode_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._CFICode, sf);
                }
                private static bool _CFICode_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.CFICode_IsReadOnly(ref result);
                    return result;
                }
                private static void _CFICode_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CFICode_Validate(r);
                }
                private static string _CFICode_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.CFICode;
                }
                private static void _CFICode_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.CFICode = v;
                }
                private static void _CFICode_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.CFICode_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    Currency = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "Currency",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Currency_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Currency_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Currency_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Currency_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Currency_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Currency_OnValueChanged);
                private static void _Currency_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._Currency, sf);
                }
                private static bool _Currency_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.Currency_IsReadOnly(ref result);
                    return result;
                }
                private static void _Currency_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Currency_Validate(r);
                }
                private static string _Currency_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.Currency;
                }
                private static void _Currency_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Currency = v;
                }
                private static void _Currency_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.Currency_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    DriverID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "DriverID",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DriverID_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DriverID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DriverID_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DriverID_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DriverID_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DriverID_OnValueChanged);
                private static void _DriverID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._DriverID, sf);
                }
                private static bool _DriverID_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.DriverID_IsReadOnly(ref result);
                    return result;
                }
                private static void _DriverID_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DriverID_Validate(r);
                }
                private static string _DriverID_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.DriverID;
                }
                private static void _DriverID_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.DriverID = v;
                }
                private static void _DriverID_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.DriverID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    Exchange = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "Exchange",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Exchange_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Exchange_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Exchange_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Exchange_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Exchange_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Exchange_OnValueChanged);
                private static void _Exchange_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._Exchange, sf);
                }
                private static bool _Exchange_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.Exchange_IsReadOnly(ref result);
                    return result;
                }
                private static void _Exchange_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Exchange_Validate(r);
                }
                private static string _Exchange_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.Exchange;
                }
                private static void _Exchange_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Exchange = v;
                }
                private static void _Exchange_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.Exchange_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    IDSource = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "IDSource",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._IDSource_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._IDSource_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._IDSource_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._IDSource_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._IDSource_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._IDSource_OnValueChanged);
                private static void _IDSource_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._IDSource, sf);
                }
                private static bool _IDSource_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.IDSource_IsReadOnly(ref result);
                    return result;
                }
                private static void _IDSource_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.IDSource_Validate(r);
                }
                private static string _IDSource_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.IDSource;
                }
                private static void _IDSource_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.IDSource = v;
                }
                private static void _IDSource_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.IDSource_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    Identity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "Identity",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Identity_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Identity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Identity_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Identity_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Identity_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Identity_OnValueChanged);
                private static void _Identity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._Identity, sf);
                }
                private static bool _Identity_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.Identity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Identity_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Identity_Validate(r);
                }
                private static string _Identity_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.Identity;
                }
                private static void _Identity_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Identity = v;
                }
                private static void _Identity_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.Identity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    LongName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "LongName",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._LongName_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._LongName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._LongName_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._LongName_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._LongName_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._LongName_OnValueChanged);
                private static void _LongName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._LongName, sf);
                }
                private static bool _LongName_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.LongName_IsReadOnly(ref result);
                    return result;
                }
                private static void _LongName_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.LongName_Validate(r);
                }
                private static string _LongName_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.LongName;
                }
                private static void _LongName_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.LongName = v;
                }
                private static void _LongName_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.LongName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    Commodity = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "Commodity",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Commodity_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Commodity_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Commodity_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Commodity_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Commodity_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Commodity_OnValueChanged);
                private static void _Commodity_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._Commodity, sf);
                }
                private static bool _Commodity_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.Commodity_IsReadOnly(ref result);
                    return result;
                }
                private static void _Commodity_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Commodity_Validate(r);
                }
                private static string _Commodity_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.Commodity;
                }
                private static void _Commodity_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Commodity = v;
                }
                private static void _Commodity_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.Commodity_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    MMY = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "MMY",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._MMY_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._MMY_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._MMY_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._MMY_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._MMY_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._MMY_OnValueChanged);
                private static void _MMY_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._MMY, sf);
                }
                private static bool _MMY_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.MMY_IsReadOnly(ref result);
                    return result;
                }
                private static void _MMY_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MMY_Validate(r);
                }
                private static string _MMY_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.MMY;
                }
                private static void _MMY_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MMY = v;
                }
                private static void _MMY_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.MMY_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    GenericName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "GenericName",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._GenericName_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._GenericName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._GenericName_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._GenericName_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._GenericName_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._GenericName_OnValueChanged);
                private static void _GenericName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._GenericName, sf);
                }
                private static bool _GenericName_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.GenericName_IsReadOnly(ref result);
                    return result;
                }
                private static void _GenericName_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.GenericName_Validate(r);
                }
                private static string _GenericName_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.GenericName;
                }
                private static void _GenericName_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.GenericName = v;
                }
                private static void _GenericName_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.GenericName_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    Mnemonic = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "Mnemonic",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Mnemonic_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Mnemonic_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Mnemonic_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Mnemonic_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Mnemonic_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Mnemonic_OnValueChanged);
                private static void _Mnemonic_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._Mnemonic, sf);
                }
                private static bool _Mnemonic_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.Mnemonic_IsReadOnly(ref result);
                    return result;
                }
                private static void _Mnemonic_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Mnemonic_Validate(r);
                }
                private static string _Mnemonic_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.Mnemonic;
                }
                private static void _Mnemonic_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Mnemonic = v;
                }
                private static void _Mnemonic_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.Mnemonic_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Entry
                    QtyIncrement = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Entry(
                        "QtyIncrement",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._QtyIncrement_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._QtyIncrement_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._QtyIncrement_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._QtyIncrement_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._QtyIncrement_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._QtyIncrement_OnValueChanged);
                private static void _QtyIncrement_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._QtyIncrement, sf);
                }
                private static bool _QtyIncrement_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.QtyIncrement_IsReadOnly(ref result);
                    return result;
                }
                private static void _QtyIncrement_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QtyIncrement_Validate(r);
                }
                private static int _QtyIncrement_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.QtyIncrement;
                }
                private static void _QtyIncrement_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, int v)
                {
                    d.ImplementationEntity.QtyIncrement = v;
                }
                private static void _QtyIncrement_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.QtyIncrement_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    SecurityID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "SecurityID",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SecurityID_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SecurityID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SecurityID_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SecurityID_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SecurityID_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SecurityID_OnValueChanged);
                private static void _SecurityID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._SecurityID, sf);
                }
                private static bool _SecurityID_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.SecurityID_IsReadOnly(ref result);
                    return result;
                }
                private static void _SecurityID_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SecurityID_Validate(r);
                }
                private static string _SecurityID_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.SecurityID;
                }
                private static void _SecurityID_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SecurityID = v;
                }
                private static void _SecurityID_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.SecurityID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Entry
                    StrikePrice = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Entry(
                        "StrikePrice",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._StrikePrice_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._StrikePrice_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._StrikePrice_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._StrikePrice_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._StrikePrice_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._StrikePrice_OnValueChanged);
                private static void _StrikePrice_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._StrikePrice, sf);
                }
                private static bool _StrikePrice_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.StrikePrice_IsReadOnly(ref result);
                    return result;
                }
                private static void _StrikePrice_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StrikePrice_Validate(r);
                }
                private static double _StrikePrice_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.StrikePrice;
                }
                private static void _StrikePrice_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, double v)
                {
                    d.ImplementationEntity.StrikePrice = v;
                }
                private static void _StrikePrice_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.StrikePrice_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    Symbol = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "Symbol",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Symbol_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Symbol_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Symbol_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Symbol_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Symbol_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Symbol_OnValueChanged);
                private static void _Symbol_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._Symbol, sf);
                }
                private static bool _Symbol_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.Symbol_IsReadOnly(ref result);
                    return result;
                }
                private static void _Symbol_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Symbol_Validate(r);
                }
                private static string _Symbol_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.Symbol;
                }
                private static void _Symbol_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Symbol = v;
                }
                private static void _Symbol_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.Symbol_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    Tag = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "Tag",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Tag_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Tag_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Tag_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Tag_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Tag_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._Tag_OnValueChanged);
                private static void _Tag_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._Tag, sf);
                }
                private static bool _Tag_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.Tag_IsReadOnly(ref result);
                    return result;
                }
                private static void _Tag_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Tag_Validate(r);
                }
                private static string _Tag_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.Tag;
                }
                private static void _Tag_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Tag = v;
                }
                private static void _Tag_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.Tag_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Entry
                    TickSize = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Entry(
                        "TickSize",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickSize_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickSize_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickSize_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickSize_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickSize_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickSize_OnValueChanged);
                private static void _TickSize_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._TickSize, sf);
                }
                private static bool _TickSize_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.TickSize_IsReadOnly(ref result);
                    return result;
                }
                private static void _TickSize_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TickSize_Validate(r);
                }
                private static double _TickSize_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.TickSize;
                }
                private static void _TickSize_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, double v)
                {
                    d.ImplementationEntity.TickSize = v;
                }
                private static void _TickSize_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.TickSize_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Entry
                    TickValue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Entry(
                        "TickValue",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickValue_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickValue_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickValue_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickValue_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickValue_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TickValue_OnValueChanged);
                private static void _TickValue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._TickValue, sf);
                }
                private static bool _TickValue_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.TickValue_IsReadOnly(ref result);
                    return result;
                }
                private static void _TickValue_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TickValue_Validate(r);
                }
                private static double _TickValue_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.TickValue;
                }
                private static void _TickValue_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, double v)
                {
                    d.ImplementationEntity.TickValue = v;
                }
                private static void _TickValue_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.TickValue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Entry
                    NumberDecimalPlaces = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Entry(
                        "NumberDecimalPlaces",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._NumberDecimalPlaces_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._NumberDecimalPlaces_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._NumberDecimalPlaces_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._NumberDecimalPlaces_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._NumberDecimalPlaces_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._NumberDecimalPlaces_OnValueChanged);
                private static void _NumberDecimalPlaces_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._NumberDecimalPlaces, sf);
                }
                private static bool _NumberDecimalPlaces_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.NumberDecimalPlaces_IsReadOnly(ref result);
                    return result;
                }
                private static void _NumberDecimalPlaces_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.NumberDecimalPlaces_Validate(r);
                }
                private static int _NumberDecimalPlaces_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.NumberDecimalPlaces;
                }
                private static void _NumberDecimalPlaces_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, int v)
                {
                    d.ImplementationEntity.NumberDecimalPlaces = v;
                }
                private static void _NumberDecimalPlaces_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.NumberDecimalPlaces_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Entry
                    PriceFeedQuantityMultiplier = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Entry(
                        "PriceFeedQuantityMultiplier",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._PriceFeedQuantityMultiplier_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._PriceFeedQuantityMultiplier_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._PriceFeedQuantityMultiplier_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._PriceFeedQuantityMultiplier_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._PriceFeedQuantityMultiplier_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._PriceFeedQuantityMultiplier_OnValueChanged);
                private static void _PriceFeedQuantityMultiplier_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._PriceFeedQuantityMultiplier, sf);
                }
                private static bool _PriceFeedQuantityMultiplier_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.PriceFeedQuantityMultiplier_IsReadOnly(ref result);
                    return result;
                }
                private static void _PriceFeedQuantityMultiplier_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.PriceFeedQuantityMultiplier_Validate(r);
                }
                private static int _PriceFeedQuantityMultiplier_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.PriceFeedQuantityMultiplier;
                }
                private static void _PriceFeedQuantityMultiplier_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, int v)
                {
                    d.ImplementationEntity.PriceFeedQuantityMultiplier = v;
                }
                private static void _PriceFeedQuantityMultiplier_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.PriceFeedQuantityMultiplier_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Entry
                    ContractSize = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Entry(
                        "ContractSize",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ContractSize_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ContractSize_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ContractSize_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ContractSize_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ContractSize_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ContractSize_OnValueChanged);
                private static void _ContractSize_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._ContractSize, sf);
                }
                private static bool _ContractSize_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.ContractSize_IsReadOnly(ref result);
                    return result;
                }
                private static void _ContractSize_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ContractSize_Validate(r);
                }
                private static double _ContractSize_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.ContractSize;
                }
                private static void _ContractSize_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, double v)
                {
                    d.ImplementationEntity.ContractSize = v;
                }
                private static void _ContractSize_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.ContractSize_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    TradeVenue = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "TradeVenue",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TradeVenue_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TradeVenue_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TradeVenue_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TradeVenue_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TradeVenue_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._TradeVenue_OnValueChanged);
                private static void _TradeVenue_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._TradeVenue, sf);
                }
                private static bool _TradeVenue_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.TradeVenue_IsReadOnly(ref result);
                    return result;
                }
                private static void _TradeVenue_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TradeVenue_Validate(r);
                }
                private static string _TradeVenue_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.TradeVenue;
                }
                private static void _TradeVenue_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.TradeVenue = v;
                }
                private static void _TradeVenue_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.TradeVenue_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    BrokerService = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "BrokerService",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._BrokerService_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._BrokerService_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._BrokerService_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._BrokerService_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._BrokerService_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._BrokerService_OnValueChanged);
                private static void _BrokerService_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._BrokerService, sf);
                }
                private static bool _BrokerService_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.BrokerService_IsReadOnly(ref result);
                    return result;
                }
                private static void _BrokerService_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.BrokerService_Validate(r);
                }
                private static string _BrokerService_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.BrokerService;
                }
                private static void _BrokerService_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.BrokerService = v;
                }
                private static void _BrokerService_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.BrokerService_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    ExDestination = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "ExDestination",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ExDestination_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ExDestination_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ExDestination_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ExDestination_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ExDestination_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._ExDestination_OnValueChanged);
                private static void _ExDestination_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._ExDestination, sf);
                }
                private static bool _ExDestination_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.ExDestination_IsReadOnly(ref result);
                    return result;
                }
                private static void _ExDestination_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ExDestination_Validate(r);
                }
                private static string _ExDestination_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.ExDestination;
                }
                private static void _ExDestination_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ExDestination = v;
                }
                private static void _ExDestination_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.ExDestination_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Entry
                    DepthLevelCount = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Entry(
                        "DepthLevelCount",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DepthLevelCount_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DepthLevelCount_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DepthLevelCount_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DepthLevelCount_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DepthLevelCount_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._DepthLevelCount_OnValueChanged);
                private static void _DepthLevelCount_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._DepthLevelCount, sf);
                }
                private static bool _DepthLevelCount_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.DepthLevelCount_IsReadOnly(ref result);
                    return result;
                }
                private static void _DepthLevelCount_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DepthLevelCount_Validate(r);
                }
                private static int _DepthLevelCount_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.DepthLevelCount;
                }
                private static void _DepthLevelCount_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, int v)
                {
                    d.ImplementationEntity.DepthLevelCount = v;
                }
                private static void _DepthLevelCount_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.DepthLevelCount_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry
                    SyntheticPriceCalcName = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Entry(
                        "SyntheticPriceCalcName",
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SyntheticPriceCalcName_Stub,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SyntheticPriceCalcName_ComputeIsReadOnly,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SyntheticPriceCalcName_Validate,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SyntheticPriceCalcName_GetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SyntheticPriceCalcName_SetImplementationValue,
                        global::LightSwitchApplication.Product.DetailsClass.PropertySetProperties._SyntheticPriceCalcName_OnValueChanged);
                private static void _SyntheticPriceCalcName_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Product.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data> c, global::LightSwitchApplication.Product.DetailsClass d, object sf)
                {
                    c(d, ref d._SyntheticPriceCalcName, sf);
                }
                private static bool _SyntheticPriceCalcName_ComputeIsReadOnly(global::LightSwitchApplication.Product e)
                {
                    bool result = false;
                    e.SyntheticPriceCalcName_IsReadOnly(ref result);
                    return result;
                }
                private static void _SyntheticPriceCalcName_Validate(global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.SyntheticPriceCalcName_Validate(r);
                }
                private static string _SyntheticPriceCalcName_GetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d)
                {
                    return d.ImplementationEntity.SyntheticPriceCalcName;
                }
                private static void _SyntheticPriceCalcName_SetImplementationValue(global::LightSwitchApplication.Product.DetailsClass d, string v)
                {
                    d.ImplementationEntity.SyntheticPriceCalcName = v;
                }
                private static void _SyntheticPriceCalcName_OnValueChanged(global::LightSwitchApplication.Product e)
                {
                    e.SyntheticPriceCalcName_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _CFICode;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _Currency;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _DriverID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _Exchange;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _IDSource;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _Identity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _LongName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _Commodity;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _MMY;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _GenericName;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _Mnemonic;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Data _QtyIncrement;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _SecurityID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Data _StrikePrice;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _Symbol;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _Tag;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Data _TickSize;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Data _TickValue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Data _NumberDecimalPlaces;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Data _PriceFeedQuantityMultiplier;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, double>.Data _ContractSize;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _TradeVenue;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _BrokerService;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _ExDestination;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, int>.Data _DepthLevelCount;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Product, global::LightSwitchApplication.Product.DetailsClass, string>.Data _SyntheticPriceCalcName;
            
        }
    
        #endregion
    }
    
    #endregion
}

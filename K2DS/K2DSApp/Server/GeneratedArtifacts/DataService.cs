//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    public sealed partial class AAK2DSDataService
        : global::LightSwitchApplication.AAK2DSData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AAK2DSDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Inserting(global::LightSwitchApplication.Account entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Inserted(global::LightSwitchApplication.Account entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Updating(global::LightSwitchApplication.Account entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Updated(global::LightSwitchApplication.Account entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Deleting(global::LightSwitchApplication.Account entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Deleted(global::LightSwitchApplication.Account entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Validate(global::LightSwitchApplication.Account entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_Validate(global::LightSwitchApplication.AccountAllocation entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_Validate(global::LightSwitchApplication.Allocation entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_Validate(global::LightSwitchApplication.Fill entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_Validate(global::LightSwitchApplication.Firm entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Validate(global::LightSwitchApplication.Order entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Validate(global::LightSwitchApplication.Product entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_Validate(global::LightSwitchApplication.Strategy entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Validate(global::LightSwitchApplication.User entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_Validate(global::LightSwitchApplication.Venue entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Single_Executing(string Identity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Single_PreprocessQuery(string Identity, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Account> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Single_Executed(string Identity, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Account> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_Single_ExecuteFailed(string Identity, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_SingleOrDefault_Executing(string Identity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_SingleOrDefault_PreprocessQuery(string Identity, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Account> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_SingleOrDefault_Executed(string Identity, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Account> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_SingleOrDefault_ExecuteFailed(string Identity, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Account> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Account> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Accounts_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_Single_Executing(global::System.Nullable<double> Ratio, global::System.Nullable<double> Amount, global::System.Nullable<double> TranchSize, global::System.Nullable<bool> Enabled);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_Single_PreprocessQuery(global::System.Nullable<double> Ratio, global::System.Nullable<double> Amount, global::System.Nullable<double> TranchSize, global::System.Nullable<bool> Enabled, ref global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_Single_Executed(global::System.Nullable<double> Ratio, global::System.Nullable<double> Amount, global::System.Nullable<double> TranchSize, global::System.Nullable<bool> Enabled, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AccountAllocation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_Single_ExecuteFailed(global::System.Nullable<double> Ratio, global::System.Nullable<double> Amount, global::System.Nullable<double> TranchSize, global::System.Nullable<bool> Enabled, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_SingleOrDefault_Executing(global::System.Nullable<double> Ratio, global::System.Nullable<double> Amount, global::System.Nullable<double> TranchSize, global::System.Nullable<bool> Enabled);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_SingleOrDefault_PreprocessQuery(global::System.Nullable<double> Ratio, global::System.Nullable<double> Amount, global::System.Nullable<double> TranchSize, global::System.Nullable<bool> Enabled, ref global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_SingleOrDefault_Executed(global::System.Nullable<double> Ratio, global::System.Nullable<double> Amount, global::System.Nullable<double> TranchSize, global::System.Nullable<bool> Enabled, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AccountAllocation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_SingleOrDefault_ExecuteFailed(global::System.Nullable<double> Ratio, global::System.Nullable<double> Amount, global::System.Nullable<double> TranchSize, global::System.Nullable<bool> Enabled, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AccountAllocation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AccountAllocations_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_Single_Executing(global::System.Nullable<double> MinOrderSize, global::System.Nullable<double> TotalQty);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_Single_PreprocessQuery(global::System.Nullable<double> MinOrderSize, global::System.Nullable<double> TotalQty, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_Single_Executed(global::System.Nullable<double> MinOrderSize, global::System.Nullable<double> TotalQty, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Allocation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_Single_ExecuteFailed(global::System.Nullable<double> MinOrderSize, global::System.Nullable<double> TotalQty, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_SingleOrDefault_Executing(global::System.Nullable<double> MinOrderSize, global::System.Nullable<double> TotalQty);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_SingleOrDefault_PreprocessQuery(global::System.Nullable<double> MinOrderSize, global::System.Nullable<double> TotalQty, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_SingleOrDefault_Executed(global::System.Nullable<double> MinOrderSize, global::System.Nullable<double> TotalQty, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Allocation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_SingleOrDefault_ExecuteFailed(global::System.Nullable<double> MinOrderSize, global::System.Nullable<double> TotalQty, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Allocation> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Allocations_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_Single_Executing(global::System.Nullable<double> AvgPx, global::System.Nullable<double> LeavesQty, global::System.Nullable<double> CumQty, global::System.Nullable<long> Ticks, global::System.Nullable<double> FillQty, global::System.Nullable<double> LastPx);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_Single_PreprocessQuery(global::System.Nullable<double> AvgPx, global::System.Nullable<double> LeavesQty, global::System.Nullable<double> CumQty, global::System.Nullable<long> Ticks, global::System.Nullable<double> FillQty, global::System.Nullable<double> LastPx, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Fill> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_Single_Executed(global::System.Nullable<double> AvgPx, global::System.Nullable<double> LeavesQty, global::System.Nullable<double> CumQty, global::System.Nullable<long> Ticks, global::System.Nullable<double> FillQty, global::System.Nullable<double> LastPx, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Fill> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_Single_ExecuteFailed(global::System.Nullable<double> AvgPx, global::System.Nullable<double> LeavesQty, global::System.Nullable<double> CumQty, global::System.Nullable<long> Ticks, global::System.Nullable<double> FillQty, global::System.Nullable<double> LastPx, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_SingleOrDefault_Executing(global::System.Nullable<double> AvgPx, global::System.Nullable<double> LeavesQty, global::System.Nullable<double> CumQty, global::System.Nullable<long> Ticks, global::System.Nullable<double> FillQty, global::System.Nullable<double> LastPx);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_SingleOrDefault_PreprocessQuery(global::System.Nullable<double> AvgPx, global::System.Nullable<double> LeavesQty, global::System.Nullable<double> CumQty, global::System.Nullable<long> Ticks, global::System.Nullable<double> FillQty, global::System.Nullable<double> LastPx, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Fill> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_SingleOrDefault_Executed(global::System.Nullable<double> AvgPx, global::System.Nullable<double> LeavesQty, global::System.Nullable<double> CumQty, global::System.Nullable<long> Ticks, global::System.Nullable<double> FillQty, global::System.Nullable<double> LastPx, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Fill> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_SingleOrDefault_ExecuteFailed(global::System.Nullable<double> AvgPx, global::System.Nullable<double> LeavesQty, global::System.Nullable<double> CumQty, global::System.Nullable<long> Ticks, global::System.Nullable<double> FillQty, global::System.Nullable<double> LastPx, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Fill> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Fill> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Fills_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_Single_Executing(global::System.Nullable<int> FirmType, global::System.Nullable<bool> External);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_Single_PreprocessQuery(global::System.Nullable<int> FirmType, global::System.Nullable<bool> External, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Firm> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_Single_Executed(global::System.Nullable<int> FirmType, global::System.Nullable<bool> External, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Firm> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_Single_ExecuteFailed(global::System.Nullable<int> FirmType, global::System.Nullable<bool> External, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_SingleOrDefault_Executing(global::System.Nullable<int> FirmType, global::System.Nullable<bool> External);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> FirmType, global::System.Nullable<bool> External, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Firm> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_SingleOrDefault_Executed(global::System.Nullable<int> FirmType, global::System.Nullable<bool> External, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Firm> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> FirmType, global::System.Nullable<bool> External, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Firm> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Firm> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Firms_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_Executing(global::System.Nullable<int> AutoTradeProcessCount, global::System.Nullable<double> AvgPx, global::System.Nullable<double> CumQty, global::System.Nullable<bool> IsAutoTrade, global::System.Nullable<double> LastPx, global::System.Nullable<double> LastQty, global::System.Nullable<double> LeavesQty, global::System.Nullable<long> MaxFloor, global::System.Nullable<long> OrderQty, global::System.Nullable<double> Price, global::System.Nullable<double> QuantityLimit, global::System.Nullable<double> StopPx);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_PreprocessQuery(global::System.Nullable<int> AutoTradeProcessCount, global::System.Nullable<double> AvgPx, global::System.Nullable<double> CumQty, global::System.Nullable<bool> IsAutoTrade, global::System.Nullable<double> LastPx, global::System.Nullable<double> LastQty, global::System.Nullable<double> LeavesQty, global::System.Nullable<long> MaxFloor, global::System.Nullable<long> OrderQty, global::System.Nullable<double> Price, global::System.Nullable<double> QuantityLimit, global::System.Nullable<double> StopPx, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_Executed(global::System.Nullable<int> AutoTradeProcessCount, global::System.Nullable<double> AvgPx, global::System.Nullable<double> CumQty, global::System.Nullable<bool> IsAutoTrade, global::System.Nullable<double> LastPx, global::System.Nullable<double> LastQty, global::System.Nullable<double> LeavesQty, global::System.Nullable<long> MaxFloor, global::System.Nullable<long> OrderQty, global::System.Nullable<double> Price, global::System.Nullable<double> QuantityLimit, global::System.Nullable<double> StopPx, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_Single_ExecuteFailed(global::System.Nullable<int> AutoTradeProcessCount, global::System.Nullable<double> AvgPx, global::System.Nullable<double> CumQty, global::System.Nullable<bool> IsAutoTrade, global::System.Nullable<double> LastPx, global::System.Nullable<double> LastQty, global::System.Nullable<double> LeavesQty, global::System.Nullable<long> MaxFloor, global::System.Nullable<long> OrderQty, global::System.Nullable<double> Price, global::System.Nullable<double> QuantityLimit, global::System.Nullable<double> StopPx, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_Executing(global::System.Nullable<int> AutoTradeProcessCount, global::System.Nullable<double> AvgPx, global::System.Nullable<double> CumQty, global::System.Nullable<bool> IsAutoTrade, global::System.Nullable<double> LastPx, global::System.Nullable<double> LastQty, global::System.Nullable<double> LeavesQty, global::System.Nullable<long> MaxFloor, global::System.Nullable<long> OrderQty, global::System.Nullable<double> Price, global::System.Nullable<double> QuantityLimit, global::System.Nullable<double> StopPx);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> AutoTradeProcessCount, global::System.Nullable<double> AvgPx, global::System.Nullable<double> CumQty, global::System.Nullable<bool> IsAutoTrade, global::System.Nullable<double> LastPx, global::System.Nullable<double> LastQty, global::System.Nullable<double> LeavesQty, global::System.Nullable<long> MaxFloor, global::System.Nullable<long> OrderQty, global::System.Nullable<double> Price, global::System.Nullable<double> QuantityLimit, global::System.Nullable<double> StopPx, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_Executed(global::System.Nullable<int> AutoTradeProcessCount, global::System.Nullable<double> AvgPx, global::System.Nullable<double> CumQty, global::System.Nullable<bool> IsAutoTrade, global::System.Nullable<double> LastPx, global::System.Nullable<double> LastQty, global::System.Nullable<double> LeavesQty, global::System.Nullable<long> MaxFloor, global::System.Nullable<long> OrderQty, global::System.Nullable<double> Price, global::System.Nullable<double> QuantityLimit, global::System.Nullable<double> StopPx, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> AutoTradeProcessCount, global::System.Nullable<double> AvgPx, global::System.Nullable<double> CumQty, global::System.Nullable<bool> IsAutoTrade, global::System.Nullable<double> LastPx, global::System.Nullable<double> LastQty, global::System.Nullable<double> LeavesQty, global::System.Nullable<long> MaxFloor, global::System.Nullable<long> OrderQty, global::System.Nullable<double> Price, global::System.Nullable<double> QuantityLimit, global::System.Nullable<double> StopPx, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Orders_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_Executing(global::System.Nullable<int> QtyIncrement, global::System.Nullable<double> StrikePrice, global::System.Nullable<double> TickSize, global::System.Nullable<double> TickValue, global::System.Nullable<int> NumberDecimalPlaces, global::System.Nullable<int> PriceFeedQuantityMultiplier, global::System.Nullable<double> ContractSize, global::System.Nullable<int> DepthLevelCount);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_PreprocessQuery(global::System.Nullable<int> QtyIncrement, global::System.Nullable<double> StrikePrice, global::System.Nullable<double> TickSize, global::System.Nullable<double> TickValue, global::System.Nullable<int> NumberDecimalPlaces, global::System.Nullable<int> PriceFeedQuantityMultiplier, global::System.Nullable<double> ContractSize, global::System.Nullable<int> DepthLevelCount, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_Executed(global::System.Nullable<int> QtyIncrement, global::System.Nullable<double> StrikePrice, global::System.Nullable<double> TickSize, global::System.Nullable<double> TickValue, global::System.Nullable<int> NumberDecimalPlaces, global::System.Nullable<int> PriceFeedQuantityMultiplier, global::System.Nullable<double> ContractSize, global::System.Nullable<int> DepthLevelCount, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Single_ExecuteFailed(global::System.Nullable<int> QtyIncrement, global::System.Nullable<double> StrikePrice, global::System.Nullable<double> TickSize, global::System.Nullable<double> TickValue, global::System.Nullable<int> NumberDecimalPlaces, global::System.Nullable<int> PriceFeedQuantityMultiplier, global::System.Nullable<double> ContractSize, global::System.Nullable<int> DepthLevelCount, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_Executing(global::System.Nullable<int> QtyIncrement, global::System.Nullable<double> StrikePrice, global::System.Nullable<double> TickSize, global::System.Nullable<double> TickValue, global::System.Nullable<int> NumberDecimalPlaces, global::System.Nullable<int> PriceFeedQuantityMultiplier, global::System.Nullable<double> ContractSize, global::System.Nullable<int> DepthLevelCount);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_PreprocessQuery(global::System.Nullable<int> QtyIncrement, global::System.Nullable<double> StrikePrice, global::System.Nullable<double> TickSize, global::System.Nullable<double> TickValue, global::System.Nullable<int> NumberDecimalPlaces, global::System.Nullable<int> PriceFeedQuantityMultiplier, global::System.Nullable<double> ContractSize, global::System.Nullable<int> DepthLevelCount, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_Executed(global::System.Nullable<int> QtyIncrement, global::System.Nullable<double> StrikePrice, global::System.Nullable<double> TickSize, global::System.Nullable<double> TickValue, global::System.Nullable<int> NumberDecimalPlaces, global::System.Nullable<int> PriceFeedQuantityMultiplier, global::System.Nullable<double> ContractSize, global::System.Nullable<int> DepthLevelCount, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_SingleOrDefault_ExecuteFailed(global::System.Nullable<int> QtyIncrement, global::System.Nullable<double> StrikePrice, global::System.Nullable<double> TickSize, global::System.Nullable<double> TickValue, global::System.Nullable<int> NumberDecimalPlaces, global::System.Nullable<int> PriceFeedQuantityMultiplier, global::System.Nullable<double> ContractSize, global::System.Nullable<int> DepthLevelCount, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_Single_Executing(global::System.Nullable<double> QtyLimit, global::System.Nullable<int> MaxIterations, global::System.Nullable<int> MaxEntries, global::System.Nullable<double> MaxPrice, global::System.Nullable<double> MinPrice, global::System.Nullable<double> Qty, global::System.Nullable<double> Price, global::System.Nullable<bool> FlattenOnExit, global::System.Nullable<bool> CancelOnExit, global::System.Nullable<bool> UseStrategyTimes, global::System.Nullable<global::System.DateTime> StartTime, global::System.Nullable<global::System.DateTime> EndTime, global::System.Nullable<double> StopPx, global::System.Nullable<int> Type, global::System.Nullable<bool> AutoConnectTrg, global::System.Nullable<int> ConditionInterval, global::System.Nullable<bool> Enabled, global::System.Nullable<int> State, global::System.Nullable<bool> Initialized);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_Single_PreprocessQuery(global::System.Nullable<double> QtyLimit, global::System.Nullable<int> MaxIterations, global::System.Nullable<int> MaxEntries, global::System.Nullable<double> MaxPrice, global::System.Nullable<double> MinPrice, global::System.Nullable<double> Qty, global::System.Nullable<double> Price, global::System.Nullable<bool> FlattenOnExit, global::System.Nullable<bool> CancelOnExit, global::System.Nullable<bool> UseStrategyTimes, global::System.Nullable<global::System.DateTime> StartTime, global::System.Nullable<global::System.DateTime> EndTime, global::System.Nullable<double> StopPx, global::System.Nullable<int> Type, global::System.Nullable<bool> AutoConnectTrg, global::System.Nullable<int> ConditionInterval, global::System.Nullable<bool> Enabled, global::System.Nullable<int> State, global::System.Nullable<bool> Initialized, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_Single_Executed(global::System.Nullable<double> QtyLimit, global::System.Nullable<int> MaxIterations, global::System.Nullable<int> MaxEntries, global::System.Nullable<double> MaxPrice, global::System.Nullable<double> MinPrice, global::System.Nullable<double> Qty, global::System.Nullable<double> Price, global::System.Nullable<bool> FlattenOnExit, global::System.Nullable<bool> CancelOnExit, global::System.Nullable<bool> UseStrategyTimes, global::System.Nullable<global::System.DateTime> StartTime, global::System.Nullable<global::System.DateTime> EndTime, global::System.Nullable<double> StopPx, global::System.Nullable<int> Type, global::System.Nullable<bool> AutoConnectTrg, global::System.Nullable<int> ConditionInterval, global::System.Nullable<bool> Enabled, global::System.Nullable<int> State, global::System.Nullable<bool> Initialized, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Strategy> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_Single_ExecuteFailed(global::System.Nullable<double> QtyLimit, global::System.Nullable<int> MaxIterations, global::System.Nullable<int> MaxEntries, global::System.Nullable<double> MaxPrice, global::System.Nullable<double> MinPrice, global::System.Nullable<double> Qty, global::System.Nullable<double> Price, global::System.Nullable<bool> FlattenOnExit, global::System.Nullable<bool> CancelOnExit, global::System.Nullable<bool> UseStrategyTimes, global::System.Nullable<global::System.DateTime> StartTime, global::System.Nullable<global::System.DateTime> EndTime, global::System.Nullable<double> StopPx, global::System.Nullable<int> Type, global::System.Nullable<bool> AutoConnectTrg, global::System.Nullable<int> ConditionInterval, global::System.Nullable<bool> Enabled, global::System.Nullable<int> State, global::System.Nullable<bool> Initialized, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_SingleOrDefault_Executing(global::System.Nullable<double> QtyLimit, global::System.Nullable<int> MaxIterations, global::System.Nullable<int> MaxEntries, global::System.Nullable<double> MaxPrice, global::System.Nullable<double> MinPrice, global::System.Nullable<double> Qty, global::System.Nullable<double> Price, global::System.Nullable<bool> FlattenOnExit, global::System.Nullable<bool> CancelOnExit, global::System.Nullable<bool> UseStrategyTimes, global::System.Nullable<global::System.DateTime> StartTime, global::System.Nullable<global::System.DateTime> EndTime, global::System.Nullable<double> StopPx, global::System.Nullable<int> Type, global::System.Nullable<bool> AutoConnectTrg, global::System.Nullable<int> ConditionInterval, global::System.Nullable<bool> Enabled, global::System.Nullable<int> State, global::System.Nullable<bool> Initialized);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_SingleOrDefault_PreprocessQuery(global::System.Nullable<double> QtyLimit, global::System.Nullable<int> MaxIterations, global::System.Nullable<int> MaxEntries, global::System.Nullable<double> MaxPrice, global::System.Nullable<double> MinPrice, global::System.Nullable<double> Qty, global::System.Nullable<double> Price, global::System.Nullable<bool> FlattenOnExit, global::System.Nullable<bool> CancelOnExit, global::System.Nullable<bool> UseStrategyTimes, global::System.Nullable<global::System.DateTime> StartTime, global::System.Nullable<global::System.DateTime> EndTime, global::System.Nullable<double> StopPx, global::System.Nullable<int> Type, global::System.Nullable<bool> AutoConnectTrg, global::System.Nullable<int> ConditionInterval, global::System.Nullable<bool> Enabled, global::System.Nullable<int> State, global::System.Nullable<bool> Initialized, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_SingleOrDefault_Executed(global::System.Nullable<double> QtyLimit, global::System.Nullable<int> MaxIterations, global::System.Nullable<int> MaxEntries, global::System.Nullable<double> MaxPrice, global::System.Nullable<double> MinPrice, global::System.Nullable<double> Qty, global::System.Nullable<double> Price, global::System.Nullable<bool> FlattenOnExit, global::System.Nullable<bool> CancelOnExit, global::System.Nullable<bool> UseStrategyTimes, global::System.Nullable<global::System.DateTime> StartTime, global::System.Nullable<global::System.DateTime> EndTime, global::System.Nullable<double> StopPx, global::System.Nullable<int> Type, global::System.Nullable<bool> AutoConnectTrg, global::System.Nullable<int> ConditionInterval, global::System.Nullable<bool> Enabled, global::System.Nullable<int> State, global::System.Nullable<bool> Initialized, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Strategy> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_SingleOrDefault_ExecuteFailed(global::System.Nullable<double> QtyLimit, global::System.Nullable<int> MaxIterations, global::System.Nullable<int> MaxEntries, global::System.Nullable<double> MaxPrice, global::System.Nullable<double> MinPrice, global::System.Nullable<double> Qty, global::System.Nullable<double> Price, global::System.Nullable<bool> FlattenOnExit, global::System.Nullable<bool> CancelOnExit, global::System.Nullable<bool> UseStrategyTimes, global::System.Nullable<global::System.DateTime> StartTime, global::System.Nullable<global::System.DateTime> EndTime, global::System.Nullable<double> StopPx, global::System.Nullable<int> Type, global::System.Nullable<bool> AutoConnectTrg, global::System.Nullable<int> ConditionInterval, global::System.Nullable<bool> Enabled, global::System.Nullable<int> State, global::System.Nullable<bool> Initialized, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Strategy> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Strategies_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_Executing(global::System.Nullable<bool> Enabled);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_PreprocessQuery(global::System.Nullable<bool> Enabled, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_Executed(global::System.Nullable<bool> Enabled, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_Single_ExecuteFailed(global::System.Nullable<bool> Enabled, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_Executing(global::System.Nullable<bool> Enabled);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_PreprocessQuery(global::System.Nullable<bool> Enabled, ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_Executed(global::System.Nullable<bool> Enabled, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_SingleOrDefault_ExecuteFailed(global::System.Nullable<bool> Enabled, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.User> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Users_All_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_Single_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_Single_Executing(global::System.Nullable<bool> UseSymbol);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_Single_PreprocessQuery(global::System.Nullable<bool> UseSymbol, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Venue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_Single_Executed(global::System.Nullable<bool> UseSymbol, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Venue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_Single_ExecuteFailed(global::System.Nullable<bool> UseSymbol, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_SingleOrDefault_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_SingleOrDefault_Executing(global::System.Nullable<bool> UseSymbol);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_SingleOrDefault_PreprocessQuery(global::System.Nullable<bool> UseSymbol, ref global::System.Linq.IQueryable<global::LightSwitchApplication.Venue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_SingleOrDefault_Executed(global::System.Nullable<bool> UseSymbol, global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Venue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_SingleOrDefault_ExecuteFailed(global::System.Nullable<bool> UseSymbol, global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_All_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_All_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_All_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Venue> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_All_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Venue> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Venues_All_ExecuteFailed(global::System.Exception exception);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Account>
                __AccountsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Account>(
                    "Accounts",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_CanInsert,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_CanUpdate,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_CanDelete,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_CanRead,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Inserting,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Inserted,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Updating,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Updated,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Deleting,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Deleted,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Validate);
            private static bool __Accounts_CanInsert(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Accounts_CanInsert(ref result);
                return result;
            }
            private static bool __Accounts_CanUpdate(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Accounts_CanUpdate(ref result);
                return result;
            }
            private static bool __Accounts_CanDelete(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Accounts_CanDelete(ref result);
                return result;
            }
            private static bool __Accounts_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Accounts_CanRead(ref result);
                return result;
            }
            private static void __Accounts_Inserting(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Account e)
            {
                d.Accounts_Inserting(e);
            }
            private static void __Accounts_Inserted(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Account e)
            {
                d.Accounts_Inserted(e);
            }
            private static void __Accounts_Updating(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Account e)
            {
                d.Accounts_Updating(e);
            }
            private static void __Accounts_Updated(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Account e)
            {
                d.Accounts_Updated(e);
            }
            private static void __Accounts_Deleting(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Account e)
            {
                d.Accounts_Deleting(e);
            }
            private static void __Accounts_Deleted(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Account e)
            {
                d.Accounts_Deleted(e);
            }
            private static void __Accounts_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Account e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Accounts_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.AccountAllocation>
                __AccountAllocationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.AccountAllocation>(
                    "AccountAllocations",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_Validate);
            private static bool __AccountAllocations_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.AccountAllocations_CanRead(ref result);
                return result;
            }
            private static void __AccountAllocations_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.AccountAllocation e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AccountAllocations_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Allocation>
                __AllocationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Allocation>(
                    "Allocations",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_Validate);
            private static bool __Allocations_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Allocations_CanRead(ref result);
                return result;
            }
            private static void __Allocations_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Allocation e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Allocations_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Fill>
                __FillsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Fill>(
                    "Fills",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_Validate);
            private static bool __Fills_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Fills_CanRead(ref result);
                return result;
            }
            private static void __Fills_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Fill e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Fills_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Firm>
                __FirmsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Firm>(
                    "Firms",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_Validate);
            private static bool __Firms_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Firms_CanRead(ref result);
                return result;
            }
            private static void __Firms_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Firm e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Firms_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Order>
                __OrdersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Order>(
                    "Orders",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_Validate);
            private static bool __Orders_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Orders_CanRead(ref result);
                return result;
            }
            private static void __Orders_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Order e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Orders_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Product>
                __ProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Product>(
                    "Products",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_Validate);
            private static bool __Products_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Products_CanRead(ref result);
                return result;
            }
            private static void __Products_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Products_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Strategy>
                __StrategiesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Strategy>(
                    "Strategies",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_Validate);
            private static bool __Strategies_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Strategies_CanRead(ref result);
                return result;
            }
            private static void __Strategies_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Strategy e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Strategies_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.User>
                __UsersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.User>(
                    "Users",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_Validate);
            private static bool __Users_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Users_CanRead(ref result);
                return result;
            }
            private static void __Users_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.User e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Users_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Venue>
                __VenuesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Venue>(
                    "Venues",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_Validate);
            private static bool __Venues_CanRead(global::LightSwitchApplication.AAK2DSDataService d)
            {
                bool result = true;
                d.Venues_CanRead(ref result);
                return result;
            }
            private static void __Venues_Validate(global::LightSwitchApplication.AAK2DSDataService d, global::LightSwitchApplication.Venue e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Venues_Validate(e, r);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.AAK2DSDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.AAK2DSDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Account>
                __Accounts_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Account>(
                    "Accounts_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_Single_PreprocessQuery);
            private static bool __Accounts_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Accounts_Single_CanExecute(ref r);
                return r;
            }
            private static void __Accounts_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Accounts_Single_Executing((string)args[0]);
            }
            private static void __Accounts_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Accounts_Single_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Account>)args[1]);
            }
            private static void __Accounts_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Accounts_Single_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Accounts_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Account> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Account>)args[1];
                d.Accounts_Single_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Account>
                __Accounts_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Account>(
                    "Accounts_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_SingleOrDefault_PreprocessQuery);
            private static bool __Accounts_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Accounts_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Accounts_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Accounts_SingleOrDefault_Executing((string)args[0]);
            }
            private static void __Accounts_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Accounts_SingleOrDefault_Executed((string)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Account>)args[1]);
            }
            private static void __Accounts_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Accounts_SingleOrDefault_ExecuteFailed((string)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Accounts_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Account> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Account>)args[1];
                d.Accounts_SingleOrDefault_PreprocessQuery((string)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Account>
                __Accounts_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Account>(
                    "Accounts_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Accounts_All_PreprocessQuery);
            private static bool __Accounts_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Accounts_All_CanExecute(ref r);
                return r;
            }
            private static void __Accounts_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Accounts_All_Executing();
            }
            private static void __Accounts_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Accounts_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Account>)args[0]);
            }
            private static void __Accounts_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Accounts_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Accounts_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Account> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Account>)args[0];
                d.Accounts_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.AccountAllocation>
                __AccountAllocations_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.AccountAllocation>(
                    "AccountAllocations_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_Single_PreprocessQuery);
            private static bool __AccountAllocations_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.AccountAllocations_Single_CanExecute(ref r);
                return r;
            }
            private static void __AccountAllocations_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.AccountAllocations_Single_Executing((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3]);
            }
            private static void __AccountAllocations_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.AccountAllocations_Single_Executed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AccountAllocation>)args[4]);
            }
            private static void __AccountAllocations_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.AccountAllocations_Single_ExecuteFailed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], ex);
            }
            private static global::System.Linq.IQueryable __AccountAllocations_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation>)args[4];
                d.AccountAllocations_Single_PreprocessQuery((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.AccountAllocation>
                __AccountAllocations_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.AccountAllocation>(
                    "AccountAllocations_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_SingleOrDefault_PreprocessQuery);
            private static bool __AccountAllocations_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.AccountAllocations_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __AccountAllocations_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.AccountAllocations_SingleOrDefault_Executing((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3]);
            }
            private static void __AccountAllocations_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.AccountAllocations_SingleOrDefault_Executed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AccountAllocation>)args[4]);
            }
            private static void __AccountAllocations_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.AccountAllocations_SingleOrDefault_ExecuteFailed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], ex);
            }
            private static global::System.Linq.IQueryable __AccountAllocations_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation>)args[4];
                d.AccountAllocations_SingleOrDefault_PreprocessQuery((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.AccountAllocation>
                __AccountAllocations_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.AccountAllocation>(
                    "AccountAllocations_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__AccountAllocations_All_PreprocessQuery);
            private static bool __AccountAllocations_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.AccountAllocations_All_CanExecute(ref r);
                return r;
            }
            private static void __AccountAllocations_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.AccountAllocations_All_Executing();
            }
            private static void __AccountAllocations_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.AccountAllocations_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AccountAllocation>)args[0]);
            }
            private static void __AccountAllocations_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.AccountAllocations_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __AccountAllocations_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AccountAllocation>)args[0];
                d.AccountAllocations_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Allocation>
                __Allocations_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Allocation>(
                    "Allocations_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_Single_PreprocessQuery);
            private static bool __Allocations_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Allocations_Single_CanExecute(ref r);
                return r;
            }
            private static void __Allocations_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Allocations_Single_Executing((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1]);
            }
            private static void __Allocations_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Allocations_Single_Executed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Allocation>)args[2]);
            }
            private static void __Allocations_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Allocations_Single_ExecuteFailed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Allocations_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation>)args[2];
                d.Allocations_Single_PreprocessQuery((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Allocation>
                __Allocations_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Allocation>(
                    "Allocations_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_SingleOrDefault_PreprocessQuery);
            private static bool __Allocations_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Allocations_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Allocations_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Allocations_SingleOrDefault_Executing((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1]);
            }
            private static void __Allocations_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Allocations_SingleOrDefault_Executed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Allocation>)args[2]);
            }
            private static void __Allocations_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Allocations_SingleOrDefault_ExecuteFailed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Allocations_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation>)args[2];
                d.Allocations_SingleOrDefault_PreprocessQuery((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Allocation>
                __Allocations_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Allocation>(
                    "Allocations_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Allocations_All_PreprocessQuery);
            private static bool __Allocations_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Allocations_All_CanExecute(ref r);
                return r;
            }
            private static void __Allocations_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Allocations_All_Executing();
            }
            private static void __Allocations_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Allocations_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Allocation>)args[0]);
            }
            private static void __Allocations_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Allocations_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Allocations_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Allocation>)args[0];
                d.Allocations_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Fill>
                __Fills_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Fill>(
                    "Fills_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_Single_PreprocessQuery);
            private static bool __Fills_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Fills_Single_CanExecute(ref r);
                return r;
            }
            private static void __Fills_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Fills_Single_Executing((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<long>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5]);
            }
            private static void __Fills_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Fills_Single_Executed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<long>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Fill>)args[6]);
            }
            private static void __Fills_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Fills_Single_ExecuteFailed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<long>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], ex);
            }
            private static global::System.Linq.IQueryable __Fills_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Fill> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Fill>)args[6];
                d.Fills_Single_PreprocessQuery((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<long>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Fill>
                __Fills_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Fill>(
                    "Fills_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_SingleOrDefault_PreprocessQuery);
            private static bool __Fills_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Fills_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Fills_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Fills_SingleOrDefault_Executing((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<long>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5]);
            }
            private static void __Fills_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Fills_SingleOrDefault_Executed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<long>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Fill>)args[6]);
            }
            private static void __Fills_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Fills_SingleOrDefault_ExecuteFailed((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<long>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], ex);
            }
            private static global::System.Linq.IQueryable __Fills_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Fill> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Fill>)args[6];
                d.Fills_SingleOrDefault_PreprocessQuery((global::System.Nullable<double>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<long>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Fill>
                __Fills_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Fill>(
                    "Fills_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Fills_All_PreprocessQuery);
            private static bool __Fills_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Fills_All_CanExecute(ref r);
                return r;
            }
            private static void __Fills_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Fills_All_Executing();
            }
            private static void __Fills_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Fills_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Fill>)args[0]);
            }
            private static void __Fills_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Fills_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Fills_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Fill> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Fill>)args[0];
                d.Fills_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Firm>
                __Firms_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Firm>(
                    "Firms_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_Single_PreprocessQuery);
            private static bool __Firms_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Firms_Single_CanExecute(ref r);
                return r;
            }
            private static void __Firms_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Firms_Single_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<bool>)args[1]);
            }
            private static void __Firms_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Firms_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<bool>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Firm>)args[2]);
            }
            private static void __Firms_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Firms_Single_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<bool>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Firms_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Firm> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Firm>)args[2];
                d.Firms_Single_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<bool>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Firm>
                __Firms_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Firm>(
                    "Firms_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_SingleOrDefault_PreprocessQuery);
            private static bool __Firms_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Firms_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Firms_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Firms_SingleOrDefault_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<bool>)args[1]);
            }
            private static void __Firms_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Firms_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<bool>)args[1], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Firm>)args[2]);
            }
            private static void __Firms_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Firms_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<bool>)args[1], ex);
            }
            private static global::System.Linq.IQueryable __Firms_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Firm> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Firm>)args[2];
                d.Firms_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<bool>)args[1], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Firm>
                __Firms_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Firm>(
                    "Firms_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Firms_All_PreprocessQuery);
            private static bool __Firms_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Firms_All_CanExecute(ref r);
                return r;
            }
            private static void __Firms_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Firms_All_Executing();
            }
            private static void __Firms_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Firms_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Firm>)args[0]);
            }
            private static void __Firms_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Firms_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Firms_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Firm> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Firm>)args[0];
                d.Firms_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Order>
                __Orders_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Order>(
                    "Orders_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_Single_PreprocessQuery);
            private static bool __Orders_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Orders_Single_CanExecute(ref r);
                return r;
            }
            private static void __Orders_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Orders_Single_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<long>)args[7], (global::System.Nullable<long>)args[8], (global::System.Nullable<double>)args[9], (global::System.Nullable<double>)args[10], (global::System.Nullable<double>)args[11]);
            }
            private static void __Orders_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Orders_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<long>)args[7], (global::System.Nullable<long>)args[8], (global::System.Nullable<double>)args[9], (global::System.Nullable<double>)args[10], (global::System.Nullable<double>)args[11], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[12]);
            }
            private static void __Orders_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_Single_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<long>)args[7], (global::System.Nullable<long>)args[8], (global::System.Nullable<double>)args[9], (global::System.Nullable<double>)args[10], (global::System.Nullable<double>)args[11], ex);
            }
            private static global::System.Linq.IQueryable __Orders_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[12];
                d.Orders_Single_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<long>)args[7], (global::System.Nullable<long>)args[8], (global::System.Nullable<double>)args[9], (global::System.Nullable<double>)args[10], (global::System.Nullable<double>)args[11], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Order>
                __Orders_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Order>(
                    "Orders_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_SingleOrDefault_PreprocessQuery);
            private static bool __Orders_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Orders_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Orders_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Orders_SingleOrDefault_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<long>)args[7], (global::System.Nullable<long>)args[8], (global::System.Nullable<double>)args[9], (global::System.Nullable<double>)args[10], (global::System.Nullable<double>)args[11]);
            }
            private static void __Orders_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Orders_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<long>)args[7], (global::System.Nullable<long>)args[8], (global::System.Nullable<double>)args[9], (global::System.Nullable<double>)args[10], (global::System.Nullable<double>)args[11], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[12]);
            }
            private static void __Orders_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<long>)args[7], (global::System.Nullable<long>)args[8], (global::System.Nullable<double>)args[9], (global::System.Nullable<double>)args[10], (global::System.Nullable<double>)args[11], ex);
            }
            private static global::System.Linq.IQueryable __Orders_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[12];
                d.Orders_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<bool>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<long>)args[7], (global::System.Nullable<long>)args[8], (global::System.Nullable<double>)args[9], (global::System.Nullable<double>)args[10], (global::System.Nullable<double>)args[11], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Order>
                __Orders_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Order>(
                    "Orders_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Orders_All_PreprocessQuery);
            private static bool __Orders_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Orders_All_CanExecute(ref r);
                return r;
            }
            private static void __Orders_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Orders_All_Executing();
            }
            private static void __Orders_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Orders_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Order>)args[0]);
            }
            private static void __Orders_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Orders_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Orders_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Order> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Order>)args[0];
                d.Orders_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Product>
                __Products_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Product>(
                    "Products_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_Single_PreprocessQuery);
            private static bool __Products_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Products_Single_CanExecute(ref r);
                return r;
            }
            private static void __Products_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Products_Single_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<int>)args[7]);
            }
            private static void __Products_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Products_Single_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<int>)args[7], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[8]);
            }
            private static void __Products_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Products_Single_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<int>)args[7], ex);
            }
            private static global::System.Linq.IQueryable __Products_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[8];
                d.Products_Single_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<int>)args[7], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Product>
                __Products_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Product>(
                    "Products_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_SingleOrDefault_PreprocessQuery);
            private static bool __Products_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Products_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Products_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Products_SingleOrDefault_Executing((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<int>)args[7]);
            }
            private static void __Products_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Products_SingleOrDefault_Executed((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<int>)args[7], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[8]);
            }
            private static void __Products_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Products_SingleOrDefault_ExecuteFailed((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<int>)args[7], ex);
            }
            private static global::System.Linq.IQueryable __Products_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[8];
                d.Products_SingleOrDefault_PreprocessQuery((global::System.Nullable<int>)args[0], (global::System.Nullable<double>)args[1], (global::System.Nullable<double>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<int>)args[4], (global::System.Nullable<int>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<int>)args[7], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Product>
                __Products_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Product>(
                    "Products_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Products_All_PreprocessQuery);
            private static bool __Products_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Products_All_CanExecute(ref r);
                return r;
            }
            private static void __Products_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Products_All_Executing();
            }
            private static void __Products_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Products_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Product>)args[0]);
            }
            private static void __Products_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Products_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Products_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Product> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Product>)args[0];
                d.Products_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Strategy>
                __Strategies_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Strategy>(
                    "Strategies_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_Single_PreprocessQuery);
            private static bool __Strategies_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Strategies_Single_CanExecute(ref r);
                return r;
            }
            private static void __Strategies_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Strategies_Single_Executing((global::System.Nullable<double>)args[0], (global::System.Nullable<int>)args[1], (global::System.Nullable<int>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<bool>)args[7], (global::System.Nullable<bool>)args[8], (global::System.Nullable<bool>)args[9], (global::System.Nullable<global::System.DateTime>)args[10], (global::System.Nullable<global::System.DateTime>)args[11], (global::System.Nullable<double>)args[12], (global::System.Nullable<int>)args[13], (global::System.Nullable<bool>)args[14], (global::System.Nullable<int>)args[15], (global::System.Nullable<bool>)args[16], (global::System.Nullable<int>)args[17], (global::System.Nullable<bool>)args[18]);
            }
            private static void __Strategies_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Strategies_Single_Executed((global::System.Nullable<double>)args[0], (global::System.Nullable<int>)args[1], (global::System.Nullable<int>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<bool>)args[7], (global::System.Nullable<bool>)args[8], (global::System.Nullable<bool>)args[9], (global::System.Nullable<global::System.DateTime>)args[10], (global::System.Nullable<global::System.DateTime>)args[11], (global::System.Nullable<double>)args[12], (global::System.Nullable<int>)args[13], (global::System.Nullable<bool>)args[14], (global::System.Nullable<int>)args[15], (global::System.Nullable<bool>)args[16], (global::System.Nullable<int>)args[17], (global::System.Nullable<bool>)args[18], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Strategy>)args[19]);
            }
            private static void __Strategies_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Strategies_Single_ExecuteFailed((global::System.Nullable<double>)args[0], (global::System.Nullable<int>)args[1], (global::System.Nullable<int>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<bool>)args[7], (global::System.Nullable<bool>)args[8], (global::System.Nullable<bool>)args[9], (global::System.Nullable<global::System.DateTime>)args[10], (global::System.Nullable<global::System.DateTime>)args[11], (global::System.Nullable<double>)args[12], (global::System.Nullable<int>)args[13], (global::System.Nullable<bool>)args[14], (global::System.Nullable<int>)args[15], (global::System.Nullable<bool>)args[16], (global::System.Nullable<int>)args[17], (global::System.Nullable<bool>)args[18], ex);
            }
            private static global::System.Linq.IQueryable __Strategies_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy>)args[19];
                d.Strategies_Single_PreprocessQuery((global::System.Nullable<double>)args[0], (global::System.Nullable<int>)args[1], (global::System.Nullable<int>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<bool>)args[7], (global::System.Nullable<bool>)args[8], (global::System.Nullable<bool>)args[9], (global::System.Nullable<global::System.DateTime>)args[10], (global::System.Nullable<global::System.DateTime>)args[11], (global::System.Nullable<double>)args[12], (global::System.Nullable<int>)args[13], (global::System.Nullable<bool>)args[14], (global::System.Nullable<int>)args[15], (global::System.Nullable<bool>)args[16], (global::System.Nullable<int>)args[17], (global::System.Nullable<bool>)args[18], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Strategy>
                __Strategies_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Strategy>(
                    "Strategies_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_SingleOrDefault_PreprocessQuery);
            private static bool __Strategies_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Strategies_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Strategies_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Strategies_SingleOrDefault_Executing((global::System.Nullable<double>)args[0], (global::System.Nullable<int>)args[1], (global::System.Nullable<int>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<bool>)args[7], (global::System.Nullable<bool>)args[8], (global::System.Nullable<bool>)args[9], (global::System.Nullable<global::System.DateTime>)args[10], (global::System.Nullable<global::System.DateTime>)args[11], (global::System.Nullable<double>)args[12], (global::System.Nullable<int>)args[13], (global::System.Nullable<bool>)args[14], (global::System.Nullable<int>)args[15], (global::System.Nullable<bool>)args[16], (global::System.Nullable<int>)args[17], (global::System.Nullable<bool>)args[18]);
            }
            private static void __Strategies_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Strategies_SingleOrDefault_Executed((global::System.Nullable<double>)args[0], (global::System.Nullable<int>)args[1], (global::System.Nullable<int>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<bool>)args[7], (global::System.Nullable<bool>)args[8], (global::System.Nullable<bool>)args[9], (global::System.Nullable<global::System.DateTime>)args[10], (global::System.Nullable<global::System.DateTime>)args[11], (global::System.Nullable<double>)args[12], (global::System.Nullable<int>)args[13], (global::System.Nullable<bool>)args[14], (global::System.Nullable<int>)args[15], (global::System.Nullable<bool>)args[16], (global::System.Nullable<int>)args[17], (global::System.Nullable<bool>)args[18], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Strategy>)args[19]);
            }
            private static void __Strategies_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Strategies_SingleOrDefault_ExecuteFailed((global::System.Nullable<double>)args[0], (global::System.Nullable<int>)args[1], (global::System.Nullable<int>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<bool>)args[7], (global::System.Nullable<bool>)args[8], (global::System.Nullable<bool>)args[9], (global::System.Nullable<global::System.DateTime>)args[10], (global::System.Nullable<global::System.DateTime>)args[11], (global::System.Nullable<double>)args[12], (global::System.Nullable<int>)args[13], (global::System.Nullable<bool>)args[14], (global::System.Nullable<int>)args[15], (global::System.Nullable<bool>)args[16], (global::System.Nullable<int>)args[17], (global::System.Nullable<bool>)args[18], ex);
            }
            private static global::System.Linq.IQueryable __Strategies_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy>)args[19];
                d.Strategies_SingleOrDefault_PreprocessQuery((global::System.Nullable<double>)args[0], (global::System.Nullable<int>)args[1], (global::System.Nullable<int>)args[2], (global::System.Nullable<double>)args[3], (global::System.Nullable<double>)args[4], (global::System.Nullable<double>)args[5], (global::System.Nullable<double>)args[6], (global::System.Nullable<bool>)args[7], (global::System.Nullable<bool>)args[8], (global::System.Nullable<bool>)args[9], (global::System.Nullable<global::System.DateTime>)args[10], (global::System.Nullable<global::System.DateTime>)args[11], (global::System.Nullable<double>)args[12], (global::System.Nullable<int>)args[13], (global::System.Nullable<bool>)args[14], (global::System.Nullable<int>)args[15], (global::System.Nullable<bool>)args[16], (global::System.Nullable<int>)args[17], (global::System.Nullable<bool>)args[18], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Strategy>
                __Strategies_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Strategy>(
                    "Strategies_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Strategies_All_PreprocessQuery);
            private static bool __Strategies_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Strategies_All_CanExecute(ref r);
                return r;
            }
            private static void __Strategies_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Strategies_All_Executing();
            }
            private static void __Strategies_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Strategies_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Strategy>)args[0]);
            }
            private static void __Strategies_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Strategies_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Strategies_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Strategy>)args[0];
                d.Strategies_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.User>
                __Users_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.User>(
                    "Users_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_Single_PreprocessQuery);
            private static bool __Users_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Users_Single_CanExecute(ref r);
                return r;
            }
            private static void __Users_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Users_Single_Executing((global::System.Nullable<bool>)args[0]);
            }
            private static void __Users_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Users_Single_Executed((global::System.Nullable<bool>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __Users_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_Single_ExecuteFailed((global::System.Nullable<bool>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Users_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.Users_Single_PreprocessQuery((global::System.Nullable<bool>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.User>
                __Users_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.User>(
                    "Users_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_SingleOrDefault_PreprocessQuery);
            private static bool __Users_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Users_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Users_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Users_SingleOrDefault_Executing((global::System.Nullable<bool>)args[0]);
            }
            private static void __Users_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Users_SingleOrDefault_Executed((global::System.Nullable<bool>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[1]);
            }
            private static void __Users_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_SingleOrDefault_ExecuteFailed((global::System.Nullable<bool>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Users_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[1];
                d.Users_SingleOrDefault_PreprocessQuery((global::System.Nullable<bool>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.User>
                __Users_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.User>(
                    "Users_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Users_All_PreprocessQuery);
            private static bool __Users_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Users_All_CanExecute(ref r);
                return r;
            }
            private static void __Users_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Users_All_Executing();
            }
            private static void __Users_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Users_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.User>)args[0]);
            }
            private static void __Users_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Users_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Users_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.User> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.User>)args[0];
                d.Users_All_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Venue>
                __Venues_SingleEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Venue>(
                    "Venues_Single",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_Single_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_Single_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_Single_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_Single_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_Single_PreprocessQuery);
            private static bool __Venues_Single_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Venues_Single_CanExecute(ref r);
                return r;
            }
            private static void __Venues_Single_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Venues_Single_Executing((global::System.Nullable<bool>)args[0]);
            }
            private static void __Venues_Single_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Venues_Single_Executed((global::System.Nullable<bool>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Venue>)args[1]);
            }
            private static void __Venues_Single_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Venues_Single_ExecuteFailed((global::System.Nullable<bool>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Venues_Single_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Venue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Venue>)args[1];
                d.Venues_Single_PreprocessQuery((global::System.Nullable<bool>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Venue>
                __Venues_SingleOrDefaultEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Venue>(
                    "Venues_SingleOrDefault",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_SingleOrDefault_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_SingleOrDefault_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_SingleOrDefault_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_SingleOrDefault_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_SingleOrDefault_PreprocessQuery);
            private static bool __Venues_SingleOrDefault_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Venues_SingleOrDefault_CanExecute(ref r);
                return r;
            }
            private static void __Venues_SingleOrDefault_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Venues_SingleOrDefault_Executing((global::System.Nullable<bool>)args[0]);
            }
            private static void __Venues_SingleOrDefault_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Venues_SingleOrDefault_Executed((global::System.Nullable<bool>)args[0], (global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Venue>)args[1]);
            }
            private static void __Venues_SingleOrDefault_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Venues_SingleOrDefault_ExecuteFailed((global::System.Nullable<bool>)args[0], ex);
            }
            private static global::System.Linq.IQueryable __Venues_SingleOrDefault_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Venue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Venue>)args[1];
                d.Venues_SingleOrDefault_PreprocessQuery((global::System.Nullable<bool>)args[0], ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Venue>
                __Venues_AllEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.AAK2DSDataService, global::LightSwitchApplication.Venue>(
                    "Venues_All",
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_All_CanExecute,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_All_Executing,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_All_Executed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_All_Failed,
                    global::LightSwitchApplication.AAK2DSDataService.DetailsClass.__Venues_All_PreprocessQuery);
            private static bool __Venues_All_CanExecute(global::LightSwitchApplication.AAK2DSDataService d, bool r)
            {
                d.Venues_All_CanExecute(ref r);
                return r;
            }
            private static void __Venues_All_Executing(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Venues_All_Executing();
            }
            private static void __Venues_All_Executed(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                d.Venues_All_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Venue>)args[0]);
            }
            private static void __Venues_All_Failed(global::LightSwitchApplication.AAK2DSDataService d, object[] args, global::System.Exception ex)
            {
                d.Venues_All_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __Venues_All_PreprocessQuery(global::LightSwitchApplication.AAK2DSDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Venue> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Venue>)args[0];
                d.Venues_All_PreprocessQuery(ref query);
                return query;
            }
    
        }
    
        #endregion
    }
    
    #endregion
}
